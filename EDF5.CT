<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="28">
  <CheatEntries>
    <CheatEntry>
      <ID>87445</ID>
      <Description>"Created by Idlehands88"</Description>
      <Options moHideChildren="1"/>
      <LastState Value="" Activated="1" RealAddress="00000000"/>
      <Color>FF8000</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>87574</ID>
          <Description>"PLAYER"</Description>
          <Options moHideChildren="1"/>
          <LastState Value="" RealAddress="00000000"/>
          <Color>808000</Color>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>4</ID>
              <Description>"Infinite Armor"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : EDF5.exe
  Version: 
  Date   : 2019-07-11
  Author : Idlehands88

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT_ARMOR,EDF5.exe,8B 80 FC 01 00 00 48) // should be unique
alloc(newmem,$1000,"EDF5.exe"+4CBDB1)
aobscanmodule(INJECT_ARMORMAX,EDF5.exe,F3 0F 5E 80 F8 01 00 00 48) // should be unique
alloc(newmem2,$1000,"EDF5.exe"+4CB84E)

label(code)
label(return)
label(code2)
label(return2)

newmem:

code:
  mov [rax+000001FC],(Float)10000000
  mov eax,[rax+000001FC]
  jmp return

INJECT_ARMOR:
  jmp newmem
  nop
return:
registersymbol(INJECT_ARMOR)

newmem2:

code2:
  mov [rax+000001F8],(Float)10000000
  jmp return2

INJECT_ARMORMAX:
  jmp newmem2
  nop
  nop
  nop
return2:
registersymbol(INJECT_ARMORMAX)

[DISABLE]

INJECT_ARMOR:
  db 8B 80 FC 01 00 00
INJECT_ARMORMAX:
  db F3 0F 5E 80 F8 01 00 00

unregistersymbol(INJECT_ARMOR)
dealloc(newmem)
unregistersymbol(INJECT_ARMORMAX)
dealloc(newmem2)

{
// ORIGINAL CODE - INJECTION POINT: "EDF5.exe"+4CBDB1

"EDF5.exe"+4CBD6E: C6 87 01 0B 00 00 01           -  mov byte ptr [rdi+00000B01],01
"EDF5.exe"+4CBD75: EB 11                          -  jmp EDF5.exe+4CBD88
"EDF5.exe"+4CBD77: C6 87 01 0B 00 00 00           -  mov byte ptr [rdi+00000B01],00
"EDF5.exe"+4CBD7E: C7 87 04 0B 00 00 00 00 00 00  -  mov [rdi+00000B04],00000000
"EDF5.exe"+4CBD88: 48 8B 87 68 07 00 00           -  mov rax,[rdi+00000768]
"EDF5.exe"+4CBD8F: F3 0F 10 87 F8 0A 00 00        -  movss xmm0,[rdi+00000AF8]
"EDF5.exe"+4CBD97: 0F 2F 80 FC 01 00 00           -  comiss xmm0,[rax+000001FC]
"EDF5.exe"+4CBD9E: 76 11                          -  jna EDF5.exe+4CBDB1
"EDF5.exe"+4CBDA0: C7 87 F0 0A 00 00 00 00 00 00  -  mov [rdi+00000AF0],00000000
"EDF5.exe"+4CBDAA: C6 87 00 0B 00 00 01           -  mov byte ptr [rdi+00000B00],01
// ---------- INJECTING HERE ----------
"EDF5.exe"+4CBDB1: 8B 80 FC 01 00 00              -  mov eax,[rax+000001FC]
// ---------- DONE INJECTING  ----------
"EDF5.exe"+4CBDB7: 48 8B CF                       -  mov rcx,rdi
"EDF5.exe"+4CBDBA: 89 87 F8 0A 00 00              -  mov [rdi+00000AF8],eax
"EDF5.exe"+4CBDC0: E8 AB DE FF FF                 -  call EDF5.exe+4C9C70
"EDF5.exe"+4CBDC5: 4C 8D 9C 24 00 02 00 00        -  lea r11,[rsp+00000200]
"EDF5.exe"+4CBDCD: 49 8B 5B 18                    -  mov rbx,[r11+18]
"EDF5.exe"+4CBDD1: 49 8B 7B 20                    -  mov rdi,[r11+20]
"EDF5.exe"+4CBDD5: 49 8B E3                       -  mov rsp,r11
"EDF5.exe"+4CBDD8: 5D                             -  pop rbp
"EDF5.exe"+4CBDD9: C3                             -  ret 
"EDF5.exe"+4CBDDA: CC                             -  int 3 
}
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>0</ID>
              <Description>"God Mode [Created by unlock375]"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>//Author : unlock375

[ENABLE]
aobscanmodule(God_Mode_aob,EDF5.exe,C7 81 8C 02 00 00 00 00 80 3F F3) // should be unique
alloc(God_Mode,1024,God_Mode_aob)
registersymbol(God_Mode_aob)

God_Mode:
  cmp [rcx+218],0
  jne @f
  cmp [rcx+258],0
  jne @f
  mov [rcx+28C],(float)0
  jmp return
@@:
  mov [rcx+0000028C],3F800000
  jmp return

God_Mode_aob:
  jmp God_Mode
  db 90 90 90 90 90
return:

[DISABLE]
God_Mode_aob:
  db C7 81 8C 02 00 00 00 00 80 3F
unregistersymbol(God_Mode_aob)
dealloc(God_Mode)
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>87570</ID>
              <Description>"Invulnerable (No Ragdoll) [Created by unlock375]"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>//Author : unlock375

[ENABLE]

aobscanmodule(Invulnerable1_aob,EDF5.exe,05 00 00 F3 0F 10 80 FC 01 00 00) // should be unique
aobscanmodule(Invulnerable2_aob,EDF5.exe,20 5F C3 CC CC 48 8B C4 55 56 57 41 54)
alloc(Invulnerable1,1024,Invulnerable1_aob)
alloc(Invulnerable2,1024,Invulnerable2_aob)
alloc(Invulnerable_cmp,4)
registersymbol(Invulnerable1_aob)
registersymbol(Invulnerable2_aob)
registersymbol(Invulnerable_cmp)

Invulnerable1:
  mov [Invulnerable_cmp],rax
  movss xmm0,[rax+000001FC]
  jmp return1

Invulnerable2:
  mov rax,[Invulnerable_cmp]
  cmp rcx,rax
  jne @f
  ret
@@:
  mov rax,rsp
  push rbp
  push rsi
  jmp return2

Invulnerable1_aob+03:
  jmp Invulnerable1
  db 90 90 90
return1:

Invulnerable2_aob+05:
  jmp Invulnerable2
return2:

[DISABLE]
Invulnerable1_aob+03:
  db F3 0F 10 80 FC 01 00 00
Invulnerable2_aob+05:
  db 48 8B C4 55 56
unregistersymbol(Invulnerable1_aob)
unregistersymbol(Invulnerable2_aob)
unregistersymbol(Invulnerable_cmp)
dealloc(Invulnerable1)
dealloc(Invulnerable2)
dealloc(Invulnerable_cmp)
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>87624</ID>
              <Description>"Player + Ally Invulnerable (No Ragdoll) [Created by unlock375]"</Description>
              <Options moHideChildren="1"/>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>//Author : unlock375

[ENABLE]
aobscanmodule(God_Mode_aob,EDF5.exe,C7 81 8C 02 00 00 00 00 80 3F F3) // should be unique
aobscanmodule(Invulnerable_aob,EDF5.exe,20 5F C3 CC CC 48 8B C4 55 56 57 41 54)
alloc(God_Mode,1024,God_Mode_aob)
alloc(Invulnerable,1024,Invulnerable_aob)
alloc(God_Mode_Team,8)
registersymbol(God_Mode_aob)
registersymbol(Invulnerable_aob)
registersymbol(God_Mode_Team)

God_Mode:
  cmp [God_Mode_Team],1
  je TeamCmp1
  cmp [rcx+218],0
  jne Origin1
Cheat1:
  mov [rcx+28C],(float)0
  jmp return1
TeamCmp1:
  cmp [rcx+218],0
  je Cheat1
  cmp [rcx+218],2
  je Cheat1
Origin1:
  mov [rcx+0000028C],3F800000
  jmp return1

Invulnerable:
  cmp [God_Mode_Team],1
  je TeamCmp2
  cmp [rcx+218],0
  jne Origin2
Cheat2:
  ret
TeamCmp2:
  cmp [rcx+218],0
  je Cheat2
  cmp [rcx+218],2
  je Cheat2
Origin2:
  mov rax,rsp
  push rbp
  push rsi
  jmp return2

God_Mode_Team:
  dq 00

Invulnerable_cmp:
  dq 00

God_Mode_aob:
  jmp God_Mode
  db 90 90 90 90 90
return1:

Invulnerable_aob+05:
  jmp Invulnerable
return2:

[DISABLE]
God_Mode_aob:
  db C7 81 8C 02 00 00 00 00 80 3F
Invulnerable_aob+05:
  db 48 8B C4 55 56
unregistersymbol(God_Mode_aob)
unregistersymbol(Invulnerable_aob)
unregistersymbol(God_Mode_Team)
dealloc(God_Mode)
dealloc(Invulnerable)
dealloc(God_Mode_Team)
</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>87625</ID>
                  <Description>"God Team"</Description>
                  <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:OFF
1:ON
</DropDownList>
                  <VariableType>4 Bytes</VariableType>
                  <Address>God_Mode_Team</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>87621</ID>
              <Description>"Ally Invulnerable (No Ragdoll) [Created by unlock375]"</Description>
              <Options moHideChildren="1"/>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>//Author : unlock375

[ENABLE]
aobscanmodule(God_Mode_aob,EDF5.exe,C7 81 8C 02 00 00 00 00 80 3F F3) // should be unique
aobscanmodule(Invulnerable_aob,EDF5.exe,20 5F C3 CC CC 48 8B C4 55 56 57 41 54)
alloc(God_Mode,1024,God_Mode_aob)
alloc(God_Mode_Switch,8)
alloc(Invulnerable,1024,Invulnerable_aob)
alloc(Invulnerable_Switch,8)
registersymbol(God_Mode_aob)
registersymbol(God_Mode_Switch)
registersymbol(Invulnerable_aob)
registersymbol(Invulnerable_Switch)

God_Mode:
  cmp [God_Mode_Switch],0
  je Origin1
  cmp [rcx+218],2
  jne Origin1
  mov [rcx+28C],(float)0
  jmp return1
Origin1:
  mov [rcx+0000028C],3F800000
  jmp return1

Invulnerable:
  cmp [Invulnerable_Switch],0
  je Origin2
  cmp [rcx+218],2
  jne Origin2
  ret
Origin2:
  mov rax,rsp
  push rbp
  push rsi
  jmp return2

God_Mode_aob:
  jmp God_Mode
  db 90 90 90 90 90
return1:

Invulnerable_aob+05:
  jmp Invulnerable
return2:

[DISABLE]
God_Mode_aob:
  db C7 81 8C 02 00 00 00 00 80 3F
Invulnerable_aob+05:
  db 48 8B C4 55 56
unregistersymbol(God_Mode_aob)
unregistersymbol(God_Mode_Switch)
unregistersymbol(Invulnerable_aob)
unregistersymbol(Invulnerable_Switch)
dealloc(God_Mode)
dealloc(God_Mode_Switch)
dealloc(Invulnerable)
dealloc(Invulnerable_Switch)
</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>87622</ID>
                  <Description>"God Mode"</Description>
                  <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:OFF
1:ON
</DropDownList>
                  <VariableType>4 Bytes</VariableType>
                  <Address>God_Mode_Switch</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>87623</ID>
                  <Description>"Invincible"</Description>
                  <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:OFF
1:ON
</DropDownList>
                  <VariableType>4 Bytes</VariableType>
                  <Address>Invulnerable_Switch</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>6</ID>
              <Description>"Infinite Wing Energy [Wing Diver]"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : EDF5.exe
  Version: 
  Date   : 2019-07-11
  Author : Idlehands88

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT_WingEnergy,EDF5.exe,F3 0F 10 80 0C 02 00 00) // should be unique
alloc(newmem,$1000,"EDF5.exe"+4D4A52)

label(code)
label(return)

newmem:

code:
  mov [rax+0000020C],(Float)10000
  movss xmm0,[rax+0000020C]
  jmp return

INJECT_WingEnergy:
  jmp newmem
  nop
  nop
  nop
return:
registersymbol(INJECT_WingEnergy)

[DISABLE]

INJECT_WingEnergy:
  db F3 0F 10 80 0C 02 00 00

unregistersymbol(INJECT_WingEnergy)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "EDF5.exe"+4D4A52

"EDF5.exe"+4D4A26: 48 8B 89 98 00 00 00              -  mov rcx,[rcx+00000098]
"EDF5.exe"+4D4A2D: 48 85 C9                          -  test rcx,rcx
"EDF5.exe"+4D4A30: 74 19                             -  je EDF5.exe+4D4A4B
"EDF5.exe"+4D4A32: 48 8B 01                          -  mov rax,[rcx]
"EDF5.exe"+4D4A35: 48 8D 15 74 C6 9C 00              -  lea rdx,[EDF5.exe+EA10B0]
"EDF5.exe"+4D4A3C: FF 50 20                          -  call qword ptr [rax+20]
"EDF5.exe"+4D4A3F: EB 0A                             -  jmp EDF5.exe+4D4A4B
"EDF5.exe"+4D4A41: 48 8D 15 68 C6 9C 00              -  lea rdx,[EDF5.exe+EA10B0]
"EDF5.exe"+4D4A48: 41 FF D0                          -  call r8
"EDF5.exe"+4D4A4B: 48 8B 86 68 07 00 00              -  mov rax,[rsi+00000768]
// ---------- INJECTING HERE ----------
"EDF5.exe"+4D4A52: F3 0F 10 80 0C 02 00 00           -  movss xmm0,[rax+0000020C]
// ---------- DONE INJECTING  ----------
"EDF5.exe"+4D4A5A: F3 0F 5E 80 08 02 00 00           -  divss xmm0,[rax+00000208]
"EDF5.exe"+4D4A62: F3 0F 11 44 24 40                 -  movss [rsp+40],xmm0
"EDF5.exe"+4D4A68: 48 C7 85 48 02 00 00 0F 00 00 00  -  mov qword ptr [rbp+00000248],0000000F
"EDF5.exe"+4D4A73: 4C 89 BD 40 02 00 00              -  mov [rbp+00000240],r15
"EDF5.exe"+4D4A7A: C6 85 30 02 00 00 00              -  mov byte ptr [rbp+00000230],00
"EDF5.exe"+4D4A81: 41 B8 09 00 00 00                 -  mov r8d,00000009
"EDF5.exe"+4D4A87: 48 8D 15 02 66 9F 00              -  lea rdx,[EDF5.exe+ECB090]
"EDF5.exe"+4D4A8E: 48 8D 8D 30 02 00 00              -  lea rcx,[rbp+00000230]
"EDF5.exe"+4D4A95: E8 B6 1E B5 FF                    -  call EDF5.exe+26950
"EDF5.exe"+4D4A9A: 48 8D 54 24 30                    -  lea rdx,[rsp+30]
}
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>87595</ID>
              <Description>"Infinite Boosts [Fencer]"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : EDF5.exe
  Version: 
  Date   : 2019-07-15
  Author : oseda

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT_Boosts,EDF5.exe,FF 8B A8 1B 00 00) // should be unique
alloc(newmem,$1000,"EDF5.exe"+2E4D14)

label(code)
label(return)

newmem:

code:
  cmp [rbx+00001BA8],eax
  jmp return

INJECT_Boosts:
  jmp newmem
  nop
return:
registersymbol(INJECT_Boosts)

[DISABLE]

INJECT_Boosts:
  db FF 8B A8 1B 00 00

unregistersymbol(INJECT_Boosts)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "EDF5.exe"+2E4D14

"EDF5.exe"+2E4CE1: 83 BB 20 16 00 00 02           -  cmp dword ptr [rbx+00001620],02
"EDF5.exe"+2E4CE8: 0F 8D AB 01 00 00              -  jnl EDF5.exe+2E4E99
"EDF5.exe"+2E4CEE: 48 89 BC 24 90 00 00 00        -  mov [rsp+00000090],rdi
"EDF5.exe"+2E4CF6: 48 85 C9                       -  test rcx,rcx
"EDF5.exe"+2E4CF9: 74 12                          -  je EDF5.exe+2E4D0D
"EDF5.exe"+2E4CFB: 48 8B 01                       -  mov rax,[rcx]
"EDF5.exe"+2E4CFE: B2 01                          -  mov dl,01
"EDF5.exe"+2E4D00: 66 89 A9 EC 0B 00 00           -  mov [rcx+00000BEC],bp
"EDF5.exe"+2E4D07: FF 90 88 00 00 00              -  call qword ptr [rax+00000088]
"EDF5.exe"+2E4D0D: 0F 10 83 30 0E 00 00           -  movups xmm0,[rbx+00000E30]
// ---------- INJECTING HERE ----------
"EDF5.exe"+2E4D14: FF 8B A8 1B 00 00              -  dec [rbx+00001BA8]
// ---------- DONE INJECTING  ----------
"EDF5.exe"+2E4D1A: 48 8D BB 90 1B 00 00           -  lea rdi,[rbx+00001B90]
"EDF5.exe"+2E4D21: 48 89 AB 18 16 00 00           -  mov [rbx+00001618],rbp
"EDF5.exe"+2E4D28: 0F 28 D0                       -  movaps xmm2,xmm0
"EDF5.exe"+2E4D2B: C7 83 20 16 00 00 02 00 00 00  -  mov [rbx+00001620],00000002
"EDF5.exe"+2E4D35: 0F 59 D2                       -  mulps xmm2,xmm2
"EDF5.exe"+2E4D38: C7 83 A0 1B 00 00 F0 00 00 00  -  mov [rbx+00001BA0],000000F0
"EDF5.exe"+2E4D42: 0F 11 07                       -  movups [rdi],xmm0
"EDF5.exe"+2E4D45: F3 0F 10 05 03 14 C0 00        -  movss xmm0,[EDF5.exe+EE6150]
"EDF5.exe"+2E4D4D: 0F 28 CA                       -  movaps xmm1,xmm2
"EDF5.exe"+2E4D50: 0F C6 CA 55                    -  shufps xmm1,xmm2,55
}
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>87596</ID>
              <Description>"Infinite Dashes [Fencer]"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : EDF5.exe
  Version: 
  Date   : 2019-07-15
  Author : oseda

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT_Dash,EDF5.exe,89 83 BC 1B 00 00 C7) // should be unique
alloc(newmem,$1000,"EDF5.exe"+2E54DE)

label(code)
label(return)

newmem:

code:
  cmp [rbx+00001BBC],eax
  jmp return

INJECT_Dash:
  jmp newmem
  nop
return:
registersymbol(INJECT_Dash)

[DISABLE]

INJECT_Dash:
  db 89 83 BC 1B 00 00

unregistersymbol(INJECT_Dash)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "EDF5.exe"+2E54DE

"EDF5.exe"+2E54A1: 48 8B 83 D0 09 00 00              -  mov rax,[rbx+000009D0]
"EDF5.exe"+2E54A8: C7 84 01 38 01 00 00 00 00 80 3F  -  mov [rcx+rax+00000138],3F800000
"EDF5.exe"+2E54B3: 8B 83 BC 1B 00 00                 -  mov eax,[rbx+00001BBC]
"EDF5.exe"+2E54B9: F3 0F 11 B3 18 0F 00 00           -  movss [rbx+00000F18],xmm6
"EDF5.exe"+2E54C1: F3 0F 11 B3 1C 0F 00 00           -  movss [rbx+00000F1C],xmm6
"EDF5.exe"+2E54C9: 0F 28 B4 24 80 00 00 00           -  movaps xmm6,[rsp+00000080]
"EDF5.exe"+2E54D1: C6 83 C0 1B 00 00 00              -  mov byte ptr [rbx+00001BC0],00
"EDF5.exe"+2E54D8: 85 C0                             -  test eax,eax
"EDF5.exe"+2E54DA: 7E 08                             -  jle EDF5.exe+2E54E4
"EDF5.exe"+2E54DC: FF C8                             -  dec eax
// ---------- INJECTING HERE ----------
"EDF5.exe"+2E54DE: 89 83 BC 1B 00 00                 -  mov [rbx+00001BBC],eax
// ---------- DONE INJECTING  ----------
"EDF5.exe"+2E54E4: C7 83 B0 1B 00 00 5A 00 00 00     -  mov [rbx+00001BB0],0000005A
"EDF5.exe"+2E54EE: C7 83 70 1B 00 00 00 00 34 43     -  mov [rbx+00001B70],43340000
"EDF5.exe"+2E54F8: 83 8B A8 11 00 00 40              -  or dword ptr [rbx+000011A8],40
"EDF5.exe"+2E54FF: C7 83 38 17 00 00 00 00 80 40     -  mov [rbx+00001738],40800000
"EDF5.exe"+2E5509: 48 8B 9C 24 B0 00 00 00           -  mov rbx,[rsp+000000B0]
"EDF5.exe"+2E5511: 48 81 C4 90 00 00 00              -  add rsp,00000090
"EDF5.exe"+2E5518: 5D                                -  pop rbp
"EDF5.exe"+2E5519: C3                                -  ret 
"EDF5.exe"+2E551A: 83 FA 01                          -  cmp edx,01
"EDF5.exe"+2E551D: 0F 85 F7 00 00 00                 -  jne EDF5.exe+2E561A
}
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>87519</ID>
              <Description>"Disable Max Loot Pickup Radius"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : EDF5.exe
  Version: 
  Date   : 2019-07-12
  Author : Idlehands88

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT_Pickup,EDF5.exe,F3 0F 10 B7 38 17 00 00) // should be unique
alloc(newmem,$1000,"EDF5.exe"+309579)

label(code)
label(return)

newmem:

code:
  //mov [rdi+00001738],(Float)1
  //movss xmm6,[rdi+00001738]
  push rdi
  mov [rdi+00001738],(Float)1000000 //Change the (Float) value here to change radius
  comiss xmm6,[rdi+00001738]
  pop rdi
  jmp return

INJECT_Pickup:
  jmp newmem
  nop
  nop
  nop
return:
registersymbol(INJECT_Pickup)

[DISABLE]

INJECT_Pickup:
  db F3 0F 10 B7 38 17 00 00

unregistersymbol(INJECT_Pickup)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "EDF5.exe"+309579

"EDF5.exe"+309552: F3 0F 58 C6              -  addss xmm0,xmm6
"EDF5.exe"+309556: 48 8B CF                 -  mov rcx,rdi
"EDF5.exe"+309559: F3 0F 11 44 24 44        -  movss [rsp+44],xmm0
"EDF5.exe"+30955F: E8 9C DE FF FF           -  call EDF5.exe+307400
"EDF5.exe"+309564: 45 33 C9                 -  xor r9d,r9d
"EDF5.exe"+309567: 0F 28 D6                 -  movaps xmm2,xmm6
"EDF5.exe"+30956A: 48 8B CF                 -  mov rcx,rdi
"EDF5.exe"+30956D: 0F 28 F8                 -  movaps xmm7,xmm0
"EDF5.exe"+309570: 41 8D 51 01              -  lea edx,[r9+01]
"EDF5.exe"+309574: E8 87 DE FF FF           -  call EDF5.exe+307400
// ---------- INJECTING HERE ----------
"EDF5.exe"+309579: F3 0F 10 B7 38 17 00 00  -  movss xmm6,[rdi+00001738]
// ---------- DONE INJECTING  ----------
"EDF5.exe"+309581: F3 0F 58 C0              -  addss xmm0,xmm0
"EDF5.exe"+309585: 0F 2F F0                 -  comiss xmm6,xmm0
"EDF5.exe"+309588: 73 03                    -  jae EDF5.exe+30958D
"EDF5.exe"+30958A: 0F 28 F0                 -  movaps xmm6,xmm0
"EDF5.exe"+30958D: 48 8B 87 70 11 00 00     -  mov rax,[rdi+00001170]
"EDF5.exe"+309594: 48 85 C0                 -  test rax,rax
"EDF5.exe"+309597: 74 15                    -  je EDF5.exe+3095AE
"EDF5.exe"+309599: 83 78 08 00              -  cmp dword ptr [rax+08],00
"EDF5.exe"+30959D: 74 0F                    -  je EDF5.exe+3095AE
"EDF5.exe"+30959F: 48 8B 87 60 11 00 00     -  mov rax,[rdi+00001160]
}
</AssemblerScript>
              <Hotkeys>
                <Hotkey>
                  <Action>Toggle Activation</Action>
                  <Keys>
                    <Key>70</Key>
                    <Key>71</Key>
                  </Keys>
                  <ID>0</ID>
                  <ActivateSound>Activate</ActivateSound>
                  <DeactivateSound>Deactivate</DeactivateSound>
                </Hotkey>
              </Hotkeys>
            </CheatEntry>
            <CheatEntry>
              <ID>87576</ID>
              <Description>"Pickup Item Amount [Created by unlock375]"</Description>
              <Options moHideChildren="1"/>
              <LastState/>
              <Color>C08000</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>//Author : unlock375

[ENABLE]
aobscanmodule(Pickup_Item_amount_aob,EDF5.exe,48 89 5C 24 08 48 89 74 24 10 57 48 83 EC 30 0F 29 74 24 20 0F) // should be unique
alloc(Pickup_Item_amount,1024,Pickup_Item_amount_aob)
alloc(Pickup_Item_amount_Value,4)
registersymbol(Pickup_Item_amount_aob)
registersymbol(Pickup_Item_amount_Value)

Pickup_Item_amount:
  mov [Pickup_Item_amount_Value],rcx
  mov [rsp+08],rbx
  jmp return

Pickup_Item_amount_aob:
  jmp Pickup_Item_amount
return:

[DISABLE]
Pickup_Item_amount_aob:
  db 48 89 5C 24 08
unregistersymbol(Pickup_Item_amount_aob)
unregistersymbol(Pickup_Item_amount_Value)
dealloc(Pickup_Item_amount)
dealloc(Pickup_Item_amount_Value)
</AssemblerScript>
              <Hotkeys>
                <Hotkey>
                  <Action>Toggle Activation</Action>
                  <Keys>
                    <Key>109</Key>
                  </Keys>
                  <ID>0</ID>
                  <ActivateSound TTS="EN">Activated</ActivateSound>
                  <DeactivateSound>Deactivate</DeactivateSound>
                </Hotkey>
              </Hotkeys>
              <CheatEntries>
                <CheatEntry>
                  <ID>87577</ID>
                  <Description>"Total"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>Pickup_Item_amount_Value</Address>
                  <Offsets>
                    <Offset>A84</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>87578</ID>
                  <Description>"Weapon"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>Pickup_Item_amount_Value</Address>
                  <Offsets>
                    <Offset>A88</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>87604</ID>
                  <Description>"Armor"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>Pickup_Item_amount_Value</Address>
                  <Offsets>
                    <Offset>A8C</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>87581</ID>
                  <Description>"Limit(Weapon)"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>Pickup_Item_amount_Value</Address>
                  <Offsets>
                    <Offset>AD8</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>87580</ID>
                  <Description>"Limit(Armor)"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>Pickup_Item_amount_Value</Address>
                  <Offsets>
                    <Offset>ADC</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>87599</ID>
              <Description>"Fencer Options"</Description>
              <Options moHideChildren="1"/>
              <LastState/>
              <Color>C08000</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : EDF5.exe
  Version: 
  Date   : 2019-07-15
  Author : oseda

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT_Fencer,EDF5.exe,89 83 BC 1B 00 00) // should be unique
alloc(newmem,$1000,"EDF5.exe"+2E4B18)

registersymbol(p_fencer)
label(p_fencer)
label(code)
label(return)

newmem:

code:
  mov [p_fencer],rbx
  mov [rbx+00001BBC],eax
  jmp return

p_fencer:
dq

INJECT_Fencer:
  jmp newmem
  nop
return:
registersymbol(INJECT_Fencer)

[DISABLE]

INJECT_Fencer:
  db 89 83 BC 1B 00 00

unregistersymbol(p_fencer)
unregistersymbol(INJECT_Fencer)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "EDF5.exe"+2E4B18

"EDF5.exe"+2E4AEA: 48 8D 8B 00 1A 00 00     -  lea rcx,[rbx+00001A00]
"EDF5.exe"+2E4AF1: 0F 28 44 24 30           -  movaps xmm0,[rsp+30]
"EDF5.exe"+2E4AF6: 48 8D 54 24 30           -  lea rdx,[rsp+30]
"EDF5.exe"+2E4AFB: 66 0F 7F 44 24 30        -  movdqa [rsp+30],xmm0
"EDF5.exe"+2E4B01: E8 DA 2E 00 00           -  call EDF5.exe+2E79E0
"EDF5.exe"+2E4B06: 84 C0                    -  test al,al
"EDF5.exe"+2E4B08: 75 14                    -  jne EDF5.exe+2E4B1E
"EDF5.exe"+2E4B0A: 39 BB B0 1B 00 00        -  cmp [rbx+00001BB0],edi
"EDF5.exe"+2E4B10: 75 0C                    -  jne EDF5.exe+2E4B1E
"EDF5.exe"+2E4B12: 8B 83 B8 1B 00 00        -  mov eax,[rbx+00001BB8]
// ---------- INJECTING HERE ----------
"EDF5.exe"+2E4B18: 89 83 BC 1B 00 00        -  mov [rbx+00001BBC],eax
// ---------- DONE INJECTING  ----------
"EDF5.exe"+2E4B1E: 8B 83 A0 1B 00 00        -  mov eax,[rbx+00001BA0]
"EDF5.exe"+2E4B24: 85 C0                    -  test eax,eax
"EDF5.exe"+2E4B26: 74 08                    -  je EDF5.exe+2E4B30
"EDF5.exe"+2E4B28: FF C8                    -  dec eax
"EDF5.exe"+2E4B2A: 89 83 A0 1B 00 00        -  mov [rbx+00001BA0],eax
"EDF5.exe"+2E4B30: 8B 83 B0 1B 00 00        -  mov eax,[rbx+00001BB0]
"EDF5.exe"+2E4B36: 85 C0                    -  test eax,eax
"EDF5.exe"+2E4B38: 74 08                    -  je EDF5.exe+2E4B42
"EDF5.exe"+2E4B3A: FF C8                    -  dec eax
"EDF5.exe"+2E4B3C: 89 83 B0 1B 00 00        -  mov [rbx+00001BB0],eax
}
</AssemblerScript>
              <Hotkeys>
                <Hotkey>
                  <Action>Toggle Activation</Action>
                  <Keys>
                    <Key>107</Key>
                  </Keys>
                  <ID>0</ID>
                  <ActivateSound TTS="EN">Activated</ActivateSound>
                  <DeactivateSound>Deactivate</DeactivateSound>
                </Hotkey>
              </Hotkeys>
              <CheatEntries>
                <CheatEntry>
                  <ID>87598</ID>
                  <Description>"Boost Speed"</Description>
                  <VariableType>Float</VariableType>
                  <Address>p_fencer</Address>
                  <Offsets>
                    <Offset>1BAC</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>87600</ID>
                  <Description>"Boosts Remaining"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>p_fencer</Address>
                  <Offsets>
                    <Offset>1BA8</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>87602</ID>
                  <Description>"Max Boosts"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>p_fencer</Address>
                  <Offsets>
                    <Offset>1BA4</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>87601</ID>
                  <Description>"Dashes Remaining"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>p_fencer</Address>
                  <Offsets>
                    <Offset>1BBC</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>87603</ID>
                  <Description>"Max Dashes"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>p_fencer</Address>
                  <Offsets>
                    <Offset>1BB8</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>87528</ID>
              <Description>"Player Multipliers"</Description>
              <Options moHideChildren="1"/>
              <LastState/>
              <Color>C08000</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : EDF5.exe
  Version: 
  Date   : 2019-07-13
  Author : Idlehands88

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT_PlayerOptions,EDF5.exe,F3 0F 59 BF 3C 16 00 00) // should be unique
alloc(newmem,$1000,"EDF5.exe"+3095AE)

registersymbol(p_player)
label(p_player)
label(code)
label(return)

newmem:

code:
  mov [p_player],rdi
  mulss xmm7,[rdi+0000163C]
  jmp return

p_player:
dq

INJECT_PlayerOptions:
  jmp newmem
  nop
  nop
  nop
return:
registersymbol(INJECT_PlayerOptions)

[DISABLE]

INJECT_PlayerOptions:
  db F3 0F 59 BF 3C 16 00 00

unregistersymbol(p_player)
unregistersymbol(INJECT_PlayerOptions)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "EDF5.exe"+3095AE

"EDF5.exe"+309585: 0F 2F F0                 -  comiss xmm6,xmm0
"EDF5.exe"+309588: 73 03                    -  jae EDF5.exe+30958D
"EDF5.exe"+30958A: 0F 28 F0                 -  movaps xmm6,xmm0
"EDF5.exe"+30958D: 48 8B 87 70 11 00 00     -  mov rax,[rdi+00001170]
"EDF5.exe"+309594: 48 85 C0                 -  test rax,rax
"EDF5.exe"+309597: 74 15                    -  je EDF5.exe+3095AE
"EDF5.exe"+309599: 83 78 08 00              -  cmp dword ptr [rax+08],00
"EDF5.exe"+30959D: 74 0F                    -  je EDF5.exe+3095AE
"EDF5.exe"+30959F: 48 8B 87 60 11 00 00     -  mov rax,[rdi+00001160]
"EDF5.exe"+3095A6: F3 0F 10 B0 58 02 00 00  -  movss xmm6,[rax+00000258]
// ---------- INJECTING HERE ----------
"EDF5.exe"+3095AE: F3 0F 59 BF 3C 16 00 00  -  mulss xmm7,[rdi+0000163C]
// ---------- DONE INJECTING  ----------
"EDF5.exe"+3095B6: 4C 8D 44 24 40           -  lea r8,[rsp+40]
"EDF5.exe"+3095BB: 48 8B 0D 16 16 F5 00     -  mov rcx,[EDF5.exe+125ABD8]
"EDF5.exe"+3095C2: 48 8B D7                 -  mov rdx,rdi
"EDF5.exe"+3095C5: 0F 28 DE                 -  movaps xmm3,xmm6
"EDF5.exe"+3095C8: F3 0F 11 7C 24 20        -  movss [rsp+20],xmm7
"EDF5.exe"+3095CE: E8 BD F8 E8 FF           -  call EDF5.exe+198E90
"EDF5.exe"+3095D3: 0F 2F 35 4A CF BD 00     -  comiss xmm6,[EDF5.exe+EE6524]
"EDF5.exe"+3095DA: 0F 86 9C 01 00 00        -  jbe EDF5.exe+30977C
"EDF5.exe"+3095E0: 48 8D 9F 28 17 00 00     -  lea rbx,[rdi+00001728]
"EDF5.exe"+3095E7: 48 83 3B 00              -  cmp qword ptr [rbx],00
}
</AssemblerScript>
              <Hotkeys>
                <Hotkey>
                  <Action>Toggle Activation</Action>
                  <Keys>
                    <Key>106</Key>
                  </Keys>
                  <ID>0</ID>
                  <ActivateSound TTS="EN">Activated</ActivateSound>
                  <DeactivateSound>Deactivate</DeactivateSound>
                </Hotkey>
              </Hotkeys>
              <CheatEntries>
                <CheatEntry>
                  <ID>87529</ID>
                  <Description>"Loot Pickup Radius"</Description>
                  <VariableType>Float</VariableType>
                  <Address>p_player</Address>
                  <Offsets>
                    <Offset>1738</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>87530</ID>
                  <Description>"Movement Speed"</Description>
                  <VariableType>Float</VariableType>
                  <Address>p_player</Address>
                  <Offsets>
                    <Offset>16A8</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>13</ID>
          <Description>"WEAPON"</Description>
          <Options moHideChildren="1"/>
          <LastState Value="" Activated="1" RealAddress="00000000"/>
          <Color>808000</Color>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>87549</ID>
              <Description>"Modify Current Weapon [Must be in mission]"</Description>
              <Options moHideChildren="1"/>
              <LastState/>
              <Color>C08000</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : EDF5.exe
  Version: 
  Date   : 2019-07-14
  Author : oseda

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT_WeapData,EDF5.exe,80 BA F0 08 00 00 00) // should be unique
alloc(newmem,$1000,"EDF5.exe"+A2C44)

registersymbol(p_weap)
label(p_weap)
label(code)
label(return)

newmem:

code:
  mov [p_weap],rdx
  cmp byte ptr [rdx+000008F0],00
  jmp return

p_weap:
dq

INJECT_WeapData:
  jmp newmem
  nop
  nop
return:
registersymbol(INJECT_WeapData)

[DISABLE]

INJECT_WeapData:
  db 80 BA F0 08 00 00 00

unregistersymbol(p_weap)
unregistersymbol(INJECT_WeapData)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "EDF5.exe"+A2C44

"EDF5.exe"+A2C0D: 41 57                    -  push r15
"EDF5.exe"+A2C0F: 48 8D 6C 24 90           -  lea rbp,[rsp-70]
"EDF5.exe"+A2C14: 48 81 EC 70 01 00 00     -  sub rsp,00000170
"EDF5.exe"+A2C1B: 48 C7 45 C8 FE FF FF FF  -  mov qword ptr [rbp-38],FFFFFFFE
"EDF5.exe"+A2C23: 4C 8B F9                 -  mov r15,rcx
"EDF5.exe"+A2C26: C6 81 40 01 00 00 00     -  mov byte ptr [rcx+00000140],00
"EDF5.exe"+A2C2D: C6 81 D0 00 00 00 00     -  mov byte ptr [rcx+000000D0],00
"EDF5.exe"+A2C34: 48 8B 91 C0 00 00 00     -  mov rdx,[rcx+000000C0]
"EDF5.exe"+A2C3B: 48 85 D2                 -  test rdx,rdx
"EDF5.exe"+A2C3E: 0F 84 35 07 00 00        -  je EDF5.exe+A3379
// ---------- INJECTING HERE ----------
"EDF5.exe"+A2C44: 80 BA F0 08 00 00 00     -  cmp byte ptr [rdx+000008F0],00
// ---------- DONE INJECTING  ----------
"EDF5.exe"+A2C4B: 74 71                    -  je EDF5.exe+A2CBE
"EDF5.exe"+A2C4D: C6 81 D0 00 00 00 01     -  mov byte ptr [rcx+000000D0],01
"EDF5.exe"+A2C54: 0F 28 82 00 09 00 00     -  movaps xmm0,[rdx+00000900]
"EDF5.exe"+A2C5B: 0F 29 81 E0 00 00 00     -  movaps [rcx+000000E0],xmm0
"EDF5.exe"+A2C62: 0F 28 8A 10 09 00 00     -  movaps xmm1,[rdx+00000910]
"EDF5.exe"+A2C69: 0F 29 89 F0 00 00 00     -  movaps [rcx+000000F0],xmm1
"EDF5.exe"+A2C70: 0F 28 82 20 09 00 00     -  movaps xmm0,[rdx+00000920]
"EDF5.exe"+A2C77: 0F 29 81 00 01 00 00     -  movaps [rcx+00000100],xmm0
"EDF5.exe"+A2C7E: 0F 28 8A 30 09 00 00     -  movaps xmm1,[rdx+00000930]
"EDF5.exe"+A2C85: 0F 29 89 10 01 00 00     -  movaps [rcx+00000110],xmm1
}
</AssemblerScript>
              <Hotkeys>
                <Hotkey>
                  <Action>Toggle Activation</Action>
                  <Keys>
                    <Key>111</Key>
                  </Keys>
                  <ID>0</ID>
                  <ActivateSound TTS="EN">Activated</ActivateSound>
                  <DeactivateSound>Deactivate</DeactivateSound>
                </Hotkey>
              </Hotkeys>
              <CheatEntries>
                <CheatEntry>
                  <ID>87546</ID>
                  <Description>"Clip Ammo"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>p_weap</Address>
                  <Offsets>
                    <Offset>8E8</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>87565</ID>
                  <Description>"Reload Speed/Charge Speed [Lower = Faster]"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>p_weap</Address>
                  <Offsets>
                    <Offset>1A4</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>87551</ID>
                  <Description>"Projectiles per Shot"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>p_weap</Address>
                  <Offsets>
                    <Offset>2F8</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>87553</ID>
                  <Description>"Rate of Fire [Lower = Faster]"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>p_weap</Address>
                  <Offsets>
                    <Offset>2FC</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>87552</ID>
                  <Description>"Bullet Spread"</Description>
                  <VariableType>Float</VariableType>
                  <Address>p_weap</Address>
                  <Offsets>
                    <Offset>308</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>87560</ID>
                  <Description>"Max Distance [Lock On]"</Description>
                  <VariableType>Float</VariableType>
                  <Address>p_weap</Address>
                  <Offsets>
                    <Offset>530</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>87559</ID>
                  <Description>"Max Targets [Lock On]"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>p_weap</Address>
                  <Offsets>
                    <Offset>53C</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>87555</ID>
                  <Description>"Bullet Speed"</Description>
                  <VariableType>Float</VariableType>
                  <Address>p_weap</Address>
                  <Offsets>
                    <Offset>694</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>87556</ID>
                  <Description>"Bullet Lifetime"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>p_weap</Address>
                  <Offsets>
                    <Offset>698</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>87558</ID>
                  <Description>"Blast Radius"</Description>
                  <VariableType>Float</VariableType>
                  <Address>p_weap</Address>
                  <Offsets>
                    <Offset>6A8</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>87562</ID>
                  <Description>"Projectile Color [RED]"</Description>
                  <VariableType>Float</VariableType>
                  <Address>p_weap</Address>
                  <Offsets>
                    <Offset>6D0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>87564</ID>
                  <Description>"Projectile Color [GREEN]"</Description>
                  <VariableType>Float</VariableType>
                  <Address>p_weap</Address>
                  <Offsets>
                    <Offset>6D4</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>87563</ID>
                  <Description>"Projectile Color [BLUE]"</Description>
                  <VariableType>Float</VariableType>
                  <Address>p_weap</Address>
                  <Offsets>
                    <Offset>6D8</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>1</ID>
              <Description>"Infinite Ammo"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : EDF5.exe
  Version: 
  Date   : 2019-07-11
  Author : Idlehands88

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT_Ammo,EDF5.exe,8B 81 E8 08 00 00 85) // should be unique
alloc(newmem,$1000,"EDF5.exe"+391230)

label(code)
label(return)

newmem:

code:
  mov [rcx+000008E8],#999
  mov eax,[rcx+000008E8]
  jmp return

INJECT_Ammo:
  jmp newmem
  nop
return:
registersymbol(INJECT_Ammo)

[DISABLE]

INJECT_Ammo:
  db 8B 81 E8 08 00 00

unregistersymbol(INJECT_Ammo)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "EDF5.exe"+391230

"EDF5.exe"+39120C: 7D 1D                          -  jnl EDF5.exe+39122B
"EDF5.exe"+39120E: 83 B9 A4 01 00 00 00           -  cmp dword ptr [rcx+000001A4],00
"EDF5.exe"+391215: 7C 14                          -  jl EDF5.exe+39122B
"EDF5.exe"+391217: C7 81 E8 08 00 00 00 00 00 00  -  mov [rcx+000008E8],00000000
"EDF5.exe"+391221: C7 81 40 0B 00 00 04 00 00 00  -  mov [rcx+00000B40],00000004
"EDF5.exe"+39122B: C3                             -  ret 
"EDF5.exe"+39122C: CC                             -  int 3 
"EDF5.exe"+39122D: CC                             -  int 3 
"EDF5.exe"+39122E: CC                             -  int 3 
"EDF5.exe"+39122F: CC                             -  int 3 
// ---------- INJECTING HERE ----------
"EDF5.exe"+391230: 8B 81 E8 08 00 00              -  mov eax,[rcx+000008E8]
// ---------- DONE INJECTING  ----------
"EDF5.exe"+391236: 85 C0                          -  test eax,eax
"EDF5.exe"+391238: 7F 26                          -  jg EDF5.exe+391260
"EDF5.exe"+39123A: 48 83 B9 38 0C 00 00 00        -  cmp qword ptr [rcx+00000C38],00
"EDF5.exe"+391242: 75 1C                          -  jne EDF5.exe+391260
"EDF5.exe"+391244: 48 83 B9 48 0C 00 00 00        -  cmp qword ptr [rcx+00000C48],00
"EDF5.exe"+39124C: 74 08                          -  je EDF5.exe+391256
"EDF5.exe"+39124E: 8B 91 A4 01 00 00              -  mov edx,[rcx+000001A4]
"EDF5.exe"+391254: EB 06                          -  jmp EDF5.exe+39125C
"EDF5.exe"+391256: 8B 91 90 0B 00 00              -  mov edx,[rcx+00000B90]
"EDF5.exe"+39125C: 85 D2                          -  test edx,edx
}
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>25</ID>
              <Description>"No Energy Cost [Wing Diver]"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : EDF5.exe
  Version: 
  Date   : 2019-07-11
  Author : Idlehands88

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT_WeaponEnergy,EDF5.exe,F3 0F 10 81 A4 0B 00 00 F3) // should be unique
alloc(newmem,$1000,"EDF5.exe"+391AE0)

label(code)
label(return)

newmem:

code:
  mov [rcx+00000BA4],#0
  movss xmm0,[rcx+00000BA4]
  jmp return

INJECT_WeaponEnergy:
  jmp newmem
  nop
  nop
  nop
return:
registersymbol(INJECT_WeaponEnergy)

[DISABLE]

INJECT_WeaponEnergy:
  db F3 0F 10 81 A4 0B 00 00

unregistersymbol(INJECT_WeaponEnergy)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "EDF5.exe"+391AE0

"EDF5.exe"+391AB0: 83 B9 E8 08 00 00 00           -  cmp dword ptr [rcx+000008E8],00
"EDF5.exe"+391AB7: 0F 8F 87 00 00 00              -  jg EDF5.exe+391B44
"EDF5.exe"+391ABD: 83 B9 40 0B 00 00 00           -  cmp dword ptr [rcx+00000B40],00
"EDF5.exe"+391AC4: 7F 7E                          -  jg EDF5.exe+391B44
"EDF5.exe"+391AC6: 48 83 B9 38 0C 00 00 00        -  cmp qword ptr [rcx+00000C38],00
"EDF5.exe"+391ACE: 75 74                          -  jne EDF5.exe+391B44
"EDF5.exe"+391AD0: F3 0F 10 89 C4 01 00 00        -  movss xmm1,[rcx+000001C4]
"EDF5.exe"+391AD8: 0F 57 D2                       -  xorps xmm2,xmm2
"EDF5.exe"+391ADB: 0F 2F CA                       -  comiss xmm1,xmm2
"EDF5.exe"+391ADE: 76 2B                          -  jna EDF5.exe+391B0B
// ---------- INJECTING HERE ----------
"EDF5.exe"+391AE0: F3 0F 10 81 A4 0B 00 00        -  movss xmm0,[rcx+00000BA4]
// ---------- DONE INJECTING  ----------
"EDF5.exe"+391AE8: F3 0F 10 1D 40 49 B5 00        -  movss xmm3,[EDF5.exe+EE6430]
"EDF5.exe"+391AF0: F3 0F 5E C1                    -  divss xmm0,xmm1
"EDF5.exe"+391AF4: 0F 28 CB                       -  movaps xmm1,xmm3
"EDF5.exe"+391AF7: F3 0F 5C C8                    -  subss xmm1,xmm0
"EDF5.exe"+391AFB: 0F 2F D1                       -  comiss xmm2,xmm1
"EDF5.exe"+391AFE: 77 07                          -  ja EDF5.exe+391B07
"EDF5.exe"+391B00: 0F 28 D3                       -  movaps xmm2,xmm3
"EDF5.exe"+391B03: F3 0F 5D D1                    -  minss xmm2,xmm1
"EDF5.exe"+391B07: 0F 28 C2                       -  movaps xmm0,xmm2
"EDF5.exe"+391B0A: C3                             -  ret 
}
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>11</ID>
              <Description>"Max Targets [Lock On]"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : EDF5.exe
  Version: 
  Date   : 2019-07-11
  Author : Idlehands88

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT_LockOnTargets,EDF5.exe,8B 87 3C 05 00 00) // should be unique
alloc(newmem,$1000,"EDF5.exe"+3915B6)

label(code)
label(return)

newmem:

code:
  mov [rdi+0000053C],#10000
  mov eax,[rdi+0000053C]
  jmp return

INJECT_LockOnTargets:
  jmp newmem
  nop
return:
registersymbol(INJECT_LockOnTargets)

[DISABLE]

INJECT_LockOnTargets:
  db 8B 87 3C 05 00 00

unregistersymbol(INJECT_LockOnTargets)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "EDF5.exe"+3915B6

"EDF5.exe"+39158A: F6 40 32 08              -  test byte ptr [rax+32],08
"EDF5.exe"+39158E: 75 17                    -  jne EDF5.exe+3915A7
"EDF5.exe"+391590: 48 8D 97 A0 00 00 00     -  lea rdx,[rdi+000000A0]
"EDF5.exe"+391597: 48 8D 8F F0 09 00 00     -  lea rcx,[rdi+000009F0]
"EDF5.exe"+39159E: 45 33 C0                 -  xor r8d,r8d
"EDF5.exe"+3915A1: E8 AA C3 0E 00           -  call EDF5.exe+47D950
"EDF5.exe"+3915A6: 90                       -  nop 
"EDF5.exe"+3915A7: 48 8D 4C 24 28           -  lea rcx,[rsp+28]
"EDF5.exe"+3915AC: E8 AF 36 D1 FF           -  call EDF5.exe+A4C60
"EDF5.exe"+3915B1: E9 4C 01 00 00           -  jmp EDF5.exe+391702
// ---------- INJECTING HERE ----------
"EDF5.exe"+3915B6: 8B 87 3C 05 00 00        -  mov eax,[rdi+0000053C]
// ---------- DONE INJECTING  ----------
"EDF5.exe"+3915BC: 48 39 87 68 09 00 00     -  cmp [rdi+00000968],rax
"EDF5.exe"+3915C3: 0F 83 31 01 00 00        -  jae EDF5.exe+3916FA
"EDF5.exe"+3915C9: 33 ED                    -  xor ebp,ebp
"EDF5.exe"+3915CB: 48 89 6C 24 40           -  mov [rsp+40],rbp
"EDF5.exe"+3915D0: 48 89 7C 24 38           -  mov [rsp+38],rdi
"EDF5.exe"+3915D5: F3 0F 10 05 6B 52 B5 00  -  movss xmm0,[EDF5.exe+EE6848]
"EDF5.exe"+3915DD: F3 0F 11 44 24 48        -  movss [rsp+48],xmm0
"EDF5.exe"+3915E3: 4C 8B 35 0E 96 EC 00     -  mov r14,[EDF5.exe+125ABF8]
"EDF5.exe"+3915EA: 83 BF 54 09 00 00 FF     -  cmp dword ptr [rdi+00000954],-01
"EDF5.exe"+3915F1: 74 69                    -  je EDF5.exe+39165C
}
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>12</ID>
              <Description>"Max Distance [Lock On]"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : EDF5.exe
  Version: 
  Date   : 2019-07-11
  Author : Idlehands88

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT_LockOnDistance,EDF5.exe,F3 0F 59 89 30 05 00 00) // should be unique
alloc(newmem,$1000,"EDF5.exe"+391336)

label(code)
label(return)

newmem:

code:
  mov [rcx+00000530],(Float)10000000
  mulss xmm1,[rcx+00000530]
  jmp return

INJECT_LockOnDistance:
  jmp newmem
  nop
  nop
  nop
return:
registersymbol(INJECT_LockOnDistance)

[DISABLE]

INJECT_LockOnDistance:
  db F3 0F 59 89 30 05 00 00

unregistersymbol(INJECT_LockOnDistance)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "EDF5.exe"+391336

"EDF5.exe"+3912EF: 0F 28 81 10 01 00 00           -  movaps xmm0,[rcx+00000110]
"EDF5.exe"+3912F6: 0F 29 81 20 09 00 00           -  movaps [rcx+00000920],xmm0
"EDF5.exe"+3912FD: 0F 28 89 20 01 00 00           -  movaps xmm1,[rcx+00000120]
"EDF5.exe"+391304: 0F 29 89 30 09 00 00           -  movaps [rcx+00000930],xmm1
"EDF5.exe"+39130B: 0F 10 81 A0 00 00 00           -  movups xmm0,[rcx+000000A0]
"EDF5.exe"+391312: 0F 11 81 30 09 00 00           -  movups [rcx+00000930],xmm0
"EDF5.exe"+391319: 0F 10 81 20 05 00 00           -  movups xmm0,[rcx+00000520]
"EDF5.exe"+391320: 0F 11 81 40 09 00 00           -  movups [rcx+00000940],xmm0
"EDF5.exe"+391327: 48 8B 81 C0 00 00 00           -  mov rax,[rcx+000000C0]
"EDF5.exe"+39132E: F3 0F 10 89 B4 05 00 00        -  movss xmm1,[rcx+000005B4]
// ---------- INJECTING HERE ----------
"EDF5.exe"+391336: F3 0F 59 89 30 05 00 00        -  mulss xmm1,[rcx+00000530]
// ---------- DONE INJECTING  ----------
"EDF5.exe"+39133E: F3 0F 11 89 50 09 00 00        -  movss [rcx+00000950],xmm1
"EDF5.exe"+391346: 8B 88 18 02 00 00              -  mov ecx,[rax+00000218]
"EDF5.exe"+39134C: 89 8A 54 09 00 00              -  mov [rdx+00000954],ecx
"EDF5.exe"+391352: 8B 8A 14 05 00 00              -  mov ecx,[rdx+00000514]
"EDF5.exe"+391358: 85 C9                          -  test ecx,ecx
"EDF5.exe"+39135A: 74 10                          -  je EDF5.exe+39136C
"EDF5.exe"+39135C: 83 F9 01                       -  cmp ecx,01
"EDF5.exe"+39135F: 75 15                          -  jne EDF5.exe+391376
"EDF5.exe"+391361: C7 82 58 09 00 00 02 00 00 00  -  mov [rdx+00000958],00000002
"EDF5.exe"+39136B: C3                             -  ret 
}
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>87572</ID>
              <Description>"Fast LockOn [Created by unlock375]"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>//Author : unlock375

[ENABLE]
aobscanmodule(Fast_LockON_aob,EDF5.exe,F3 0F 11 87 78 09 00 00) // should be unique
alloc(Fast_LockON,1024,Fast_LockON_aob)
registersymbol(Fast_LockON_aob)

Fast_LockON:
  mov [rdi+00000978],(float)5000
  jmp return

Fast_LockON_aob:
  jmp Fast_LockON
  nop
  nop
  nop
return:

[DISABLE]
Fast_LockON_aob:
  db F3 0F 11 87 78 09 00 00
unregistersymbol(Fast_LockON_aob)
dealloc(newmem)
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>87531</ID>
              <Description>"One Hit Kill [Created by unlock375]"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>//Author : unlock375

[ENABLE]
aobscanmodule(OHK_aob,EDF5.exe,C7 81 90 02 00 00 00 00 80 3F 8B) // should be unique
alloc(OHK,2014,OHK_aob)
registersymbol(OHK_aob)

OHK:
  cmp [rcx+218],0
  jne @f
  cmp [rcx+258],0
  jne @f
  mov [rcx+290],(float)1000000
  jmp return
@@:
  mov [rcx+00000290],3F800000
  jmp return

OHK_aob:
  jmp OHK
  db 90 90 90 90 90
return:

[DISABLE]
OHK_aob:
  db C7 81 90 02 00 00 00 00 80 3F
unregistersymbol(OHK_aob)
dealloc(OHK)
</AssemblerScript>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>87495</ID>
          <Description>"VEHICLE"</Description>
          <Options moHideChildren="1"/>
          <LastState Value="" RealAddress="00000000"/>
          <Color>808000</Color>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>87494</ID>
              <Description>"Infinite Health"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : EDF5.exe
  Version: 
  Date   : 2019-07-12
  Author : Idlehands88

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT_VehicleHealth,EDF5.exe,F3 0F 10 83 FC 01 00 00 44) // should be unique
alloc(newmem,$1000,"EDF5.exe"+4CBE43)

label(code)
label(return)

newmem:

code:
  mov [rbx+000001FC],(Float)100000000
  movss xmm0,[rbx+000001FC]
  jmp return

INJECT_VehicleHealth:
  jmp newmem
  nop
  nop
  nop
return:
registersymbol(INJECT_VehicleHealth)

[DISABLE]

INJECT_VehicleHealth:
  db F3 0F 10 83 FC 01 00 00

unregistersymbol(INJECT_VehicleHealth)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "EDF5.exe"+4CBE43

"EDF5.exe"+4CBE0F: 48 8B 89 68 07 00 00     -  mov rcx,[rcx+00000768]
"EDF5.exe"+4CBE16: 48 8B 81 70 11 00 00     -  mov rax,[rcx+00001170]
"EDF5.exe"+4CBE1D: 48 85 C0                 -  test rax,rax
"EDF5.exe"+4CBE20: 0F 84 99 00 00 00        -  je EDF5.exe+4CBEBF
"EDF5.exe"+4CBE26: 39 70 08                 -  cmp [rax+08],esi
"EDF5.exe"+4CBE29: 0F 84 90 00 00 00        -  je EDF5.exe+4CBEBF
"EDF5.exe"+4CBE2F: E8 1C CA E1 FF           -  call EDF5.exe+2E8850
"EDF5.exe"+4CBE34: 48 8B 8F 68 07 00 00     -  mov rcx,[rdi+00000768]
"EDF5.exe"+4CBE3B: 48 8B D8                 -  mov rbx,rax
"EDF5.exe"+4CBE3E: E8 0D CA E1 FF           -  call EDF5.exe+2E8850
// ---------- INJECTING HERE ----------
"EDF5.exe"+4CBE43: F3 0F 10 83 FC 01 00 00  -  movss xmm0,[rbx+000001FC]
// ---------- DONE INJECTING  ----------
"EDF5.exe"+4CBE4B: 44 8D 46 09              -  lea r8d,[rsi+09]
"EDF5.exe"+4CBE4F: 48 8D 15 3A F2 9F 00     -  lea rdx,[EDF5.exe+ECB090]
"EDF5.exe"+4CBE56: 48 C7 45 DF 0F 00 00 00  -  mov qword ptr [rbp-21],0000000F
"EDF5.exe"+4CBE5E: 48 8D 4D C7              -  lea rcx,[rbp-39]
"EDF5.exe"+4CBE62: 48 89 75 D7              -  mov [rbp-29],rsi
"EDF5.exe"+4CBE66: F3 0F 5E 80 F8 01 00 00  -  divss xmm0,[rax+000001F8]
"EDF5.exe"+4CBE6E: 40 88 75 C7              -  mov [rbp-39],sil
"EDF5.exe"+4CBE72: F3 0F 11 44 24 20        -  movss [rsp+20],xmm0
"EDF5.exe"+4CBE78: E8 D3 AA B5 FF           -  call EDF5.exe+26950
"EDF5.exe"+4CBE7D: 48 8D 97 50 09 00 00     -  lea rdx,[rdi+00000950]
}
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>87496</ID>
              <Description>"Infinite Ammo"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : EDF5.exe
  Version: 
  Date   : 2019-07-12
  Author : Idlehands88

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT_VehicleAmmo,EDF5.exe,8B 98 E8 08 00 00) // should be unique
alloc(newmem,$1000,"EDF5.exe"+4D39D2)

label(code)
label(return)

newmem:

code:
  mov [rax+000008E8],#999
  mov ebx,[rax+000008E8]
  jmp return

INJECT_VehicleAmmo:
  jmp newmem
  nop
return:
registersymbol(INJECT_VehicleAmmo)

[DISABLE]

INJECT_VehicleAmmo:
  db 8B 98 E8 08 00 00

unregistersymbol(INJECT_VehicleAmmo)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "EDF5.exe"+4D39D2

"EDF5.exe"+4D39A3: 66 42 83 3C 42 00                 -  cmp word ptr [rdx+r8*2],00
"EDF5.exe"+4D39A9: 75 F5                             -  jne EDF5.exe+4D39A0
"EDF5.exe"+4D39AB: 48 8D 8D 00 01 00 00              -  lea rcx,[rbp+00000100]
"EDF5.exe"+4D39B2: E8 C9 39 B5 FF                    -  call EDF5.exe+27380
"EDF5.exe"+4D39B7: 90                                -  nop 
"EDF5.exe"+4D39B8: 48 8B 87 40 0C 00 00              -  mov rax,[rdi+00000C40]
"EDF5.exe"+4D39BF: 4A 63 0C B8                       -  movsxd  rcx,dword ptr [rax+r15*4]
"EDF5.exe"+4D39C3: 48 8B 83 C8 00 00 00              -  mov rax,[rbx+000000C8]
"EDF5.exe"+4D39CA: 48 8B 0C C8                       -  mov rcx,[rax+rcx*8]
"EDF5.exe"+4D39CE: 48 8B 41 10                       -  mov rax,[rcx+10]
// ---------- INJECTING HERE ----------
"EDF5.exe"+4D39D2: 8B 98 E8 08 00 00                 -  mov ebx,[rax+000008E8]
// ---------- DONE INJECTING  ----------
"EDF5.exe"+4D39D8: 8B D3                             -  mov edx,ebx
"EDF5.exe"+4D39DA: 48 8D 8D A0 01 00 00              -  lea rcx,[rbp+000001A0]
"EDF5.exe"+4D39E1: E8 3A 38 BE FF                    -  call EDF5.exe+B7220
"EDF5.exe"+4D39E6: 90                                -  nop 
"EDF5.exe"+4D39E7: 49 63 F6                          -  movsxd  rsi,r14d
"EDF5.exe"+4D39EA: 48 C1 E6 04                       -  shl rsi,04
"EDF5.exe"+4D39EE: 48 8B 54 24 38                    -  mov rdx,[rsp+38]
"EDF5.exe"+4D39F3: 48 03 D6                          -  add rdx,rsi
"EDF5.exe"+4D39F6: 48 8D 4D D0                       -  lea rcx,[rbp-30]
"EDF5.exe"+4D39FA: E8 01 A4 B9 FF                    -  call EDF5.exe+6DE00
}
</AssemblerScript>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>87475</ID>
          <Description>"ONLINE CREATE ROOM [Activate options you want before entering Create Room screen]"</Description>
          <Options moHideChildren="1"/>
          <LastState Value="" RealAddress="00000000"/>
          <Color>808000</Color>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>87590</ID>
              <Description>"Weapon and Armor Limits Unlocked"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : EDF5.exe
  Version: 
  Date   : 2019-07-15
  Author : Idlehands88

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT_Limits,EDF5.exe,0F B6 B8 14 6D 00 00) // should be unique
alloc(newmem,$1000,"EDF5.exe"+577504)

label(code)
label(return)

newmem:

code:
  mov byte ptr [rax+00006D14],00
  movzx edi,byte ptr [rax+00006D14]
  jmp return

INJECT_Limits:
  jmp newmem
  nop
  nop
return:
registersymbol(INJECT_Limits)

[DISABLE]

INJECT_Limits:
  db 0F B6 B8 14 6D 00 00

unregistersymbol(INJECT_Limits)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "EDF5.exe"+577504

"EDF5.exe"+5774CB: 4C 8D 44 24 30              -  lea r8,[rsp+30]
"EDF5.exe"+5774D0: 41 8D 51 01                 -  lea edx,[r9+01]
"EDF5.exe"+5774D4: 49 8B CA                    -  mov rcx,r10
"EDF5.exe"+5774D7: 41 FF D3                    -  call r11
"EDF5.exe"+5774DA: 48 8B 44 24 30              -  mov rax,[rsp+30]
"EDF5.exe"+5774DF: F3 0F 10 40 10              -  movss xmm0,[rax+10]
"EDF5.exe"+5774E4: F3 41 0F 58 86 D8 07 00 00  -  addss xmm0,dword ptr [r14+000007D8]
"EDF5.exe"+5774ED: F3 41 0F 11 86 D8 07 00 00  -  movss [r14+000007D8],xmm0
"EDF5.exe"+5774F6: 41 FF 86 DC 07 00 00        -  inc [r14+000007DC]
"EDF5.exe"+5774FD: 48 8B 05 2C 36 CE 00        -  mov rax,[EDF5.exe+125AB30]
// ---------- INJECTING HERE ----------
"EDF5.exe"+577504: 0F B6 B8 14 6D 00 00        -  movzx edi,byte ptr [rax+00006D14]
// ---------- DONE INJECTING  ----------
"EDF5.exe"+57750B: 40 84 FF                    -  test dil,dil
"EDF5.exe"+57750E: 41 0F 94 C7                 -  sete r15l
"EDF5.exe"+577512: 48 C7 45 68 07 00 00 00     -  mov qword ptr [rbp+68],00000007
"EDF5.exe"+57751A: 45 33 ED                    -  xor r13d,r13d
"EDF5.exe"+57751D: 4C 89 6D 60                 -  mov [rbp+60],r13
"EDF5.exe"+577521: 66 44 89 6D 50              -  mov [rbp+50],r13w
"EDF5.exe"+577526: 45 8D 45 11                 -  lea r8d,[r13+11]
"EDF5.exe"+57752A: 48 8D 15 7F 35 96 00        -  lea rdx,[EDF5.exe+EDAAB0]
"EDF5.exe"+577531: 48 8D 4D 50                 -  lea rcx,[rbp+50]
"EDF5.exe"+577535: E8 46 FE AA FF              -  call EDF5.exe+27380
}
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>87474</ID>
              <Description>"INFERNO Difficulty Selected"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : EDF5.exe
  Version: 
  Date   : 2019-07-12
  Author : Idlehands88

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT_Inferno,EDF5.exe,8B 81 68 56 00 00 89 41 4C C3) // should be unique
alloc(newmem,$1000,"EDF5.exe"+3E3C10)

label(code)
label(return)

newmem:

code:
  mov [rcx+00005668],#4
  mov eax,[rcx+00005668]
  jmp return

INJECT_Inferno:
  jmp newmem
  nop
return:
registersymbol(INJECT_Inferno)

[DISABLE]

INJECT_Inferno:
  db 8B 81 68 56 00 00

unregistersymbol(INJECT_Inferno)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "EDF5.exe"+3E3C10

"EDF5.exe"+3E3BF9: CC                       -  int 3 
"EDF5.exe"+3E3BFA: CC                       -  int 3 
"EDF5.exe"+3E3BFB: CC                       -  int 3 
"EDF5.exe"+3E3BFC: CC                       -  int 3 
"EDF5.exe"+3E3BFD: CC                       -  int 3 
"EDF5.exe"+3E3BFE: CC                       -  int 3 
"EDF5.exe"+3E3BFF: CC                       -  int 3 
"EDF5.exe"+3E3C00: 48 8B 0D 29 6F E7 00     -  mov rcx,[EDF5.exe+125AB30]
"EDF5.exe"+3E3C07: 8B 81 64 56 00 00        -  mov eax,[rcx+00005664]
"EDF5.exe"+3E3C0D: 89 41 48                 -  mov [rcx+48],eax
// ---------- INJECTING HERE ----------
"EDF5.exe"+3E3C10: 8B 81 68 56 00 00        -  mov eax,[rcx+00005668]
// ---------- DONE INJECTING  ----------
"EDF5.exe"+3E3C16: 89 41 4C                 -  mov [rcx+4C],eax
"EDF5.exe"+3E3C19: C3                       -  ret 
"EDF5.exe"+3E3C1A: CC                       -  int 3 
"EDF5.exe"+3E3C1B: CC                       -  int 3 
"EDF5.exe"+3E3C1C: CC                       -  int 3 
"EDF5.exe"+3E3C1D: CC                       -  int 3 
"EDF5.exe"+3E3C1E: CC                       -  int 3 
"EDF5.exe"+3E3C1F: CC                       -  int 3 
"EDF5.exe"+3E3C20: 48 8B 0D 09 6F E7 00     -  mov rcx,[EDF5.exe+125AB30]
"EDF5.exe"+3E3C27: E9 84 5B CA FF           -  jmp EDF5.exe+897B0
}
</AssemblerScript>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>87466</ID>
          <Description>"UNLOCKS"</Description>
          <Options moHideChildren="1"/>
          <LastState Value="" RealAddress="00000000"/>
          <Color>808000</Color>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>87465</ID>
              <Description>"Max Armor Upgrades [Have to open each classes Armor screen]"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : EDF5.exe
  Version: 
  Date   : 2019-07-12
  Author : Idlehands88

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT_MaxArmorRanger,EDF5.exe,43 8B 84 8A 24 6D 00 00) // should be unique
alloc(newmem,$1000,"EDF5.exe"+5091F8)

label(code)
label(return)

newmem:

code:
  mov [r10+r9*4+00006D24],#156249700
  mov eax,[r10+r9*4+00006D24]
  jmp return

INJECT_MaxArmorRanger:
  jmp newmem
  nop
  nop
  nop
return:
registersymbol(INJECT_MaxArmorRanger)

[DISABLE]

INJECT_MaxArmorRanger:
  db 43 8B 84 8A 24 6D 00 00

unregistersymbol(INJECT_MaxArmorRanger)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "EDF5.exe"+5091F8

"EDF5.exe"+5091CA: 44 8B 89 88 07 00 00     -  mov r9d,[rcx+00000788]
"EDF5.exe"+5091D1: 48 8B F9                 -  mov rdi,rcx
"EDF5.exe"+5091D4: 8B 81 20 05 00 00        -  mov eax,[rcx+00000520]
"EDF5.exe"+5091DA: 0F 57 D2                 -  xorps xmm2,xmm2
"EDF5.exe"+5091DD: 4C 8B 15 4C 19 D5 00     -  mov r10,[EDF5.exe+125AB30]
"EDF5.exe"+5091E4: 0F 57 C9                 -  xorps xmm1,xmm1
"EDF5.exe"+5091E7: 48 69 D0 98 0F 00 00     -  imul rdx,rax00000F98
"EDF5.exe"+5091EE: 49 63 C1                 -  movsxd  rax,r9d
"EDF5.exe"+5091F1: 49 03 D1                 -  add rdx,r9
"EDF5.exe"+5091F4: 4C 8D 1C 40              -  lea r11,[rax+rax*2]
// ---------- INJECTING HERE ----------
"EDF5.exe"+5091F8: 43 8B 84 8A 24 6D 00 00  -  mov eax,[r10+r9*4+00006D24]
// ---------- DONE INJECTING  ----------
"EDF5.exe"+509200: 41 8B 9C 92 44 6E 00 00  -  mov ebx,[r10+rdx*4+00006E44]
"EDF5.exe"+509208: 49 8B 92 F8 00 00 00     -  mov rdx,[r10+000000F8]
"EDF5.exe"+50920F: 49 C1 E3 02              -  shl r11,02
"EDF5.exe"+509213: F3 48 0F 2A D0           -  cvtsi2ss xmm2,rax
"EDF5.exe"+509218: 48 63 4A 08              -  movsxd  rcx,dword ptr [rdx+08]
"EDF5.exe"+50921C: 49 03 CB                 -  add rcx,r11
"EDF5.exe"+50921F: 48 03 CA                 -  add rcx,rdx
"EDF5.exe"+509222: F3 48 0F 2A CB           -  cvtsi2ss xmm1,rbx
"EDF5.exe"+509227: 4C 63 41 08              -  movsxd  r8,dword ptr [rcx+08]
"EDF5.exe"+50922B: 4C 03 C1                 -  add r8,rcx
}
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>87485</ID>
              <Description>"All Weapons"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : EDF5.exe
  Version: 
  Date   : 2019-07-12
  Author : Idlehands88

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT_WeapUnlock,EDF5.exe,41 F6 04 87 01) // should be unique
alloc(newmem,$1000,"EDF5.exe"+8CB2C)

label(code)
label(return)

newmem:

code:
  mov byte ptr [r15+rax*4],01
  test byte ptr [r15+rax*4],01
  jmp return

INJECT_WeapUnlock:
  jmp newmem
return:
registersymbol(INJECT_WeapUnlock)

[DISABLE]

INJECT_WeapUnlock:
  db 41 F6 04 87 01

unregistersymbol(INJECT_WeapUnlock)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "EDF5.exe"+8CB2C

"EDF5.exe"+8CB0D: 90                       -  nop 
"EDF5.exe"+8CB0E: 49 8B 87 B8 01 00 00     -  mov rax,[r15+000001B8]
"EDF5.exe"+8CB15: 8B 50 04                 -  mov edx,[rax+04]
"EDF5.exe"+8CB18: 8B FB                    -  mov edi,ebx
"EDF5.exe"+8CB1A: 8B CB                    -  mov ecx,ebx
"EDF5.exe"+8CB1C: 85 D2                    -  test edx,edx
"EDF5.exe"+8CB1E: 74 1F                    -  je EDF5.exe+8CB3F
"EDF5.exe"+8CB20: 8B C1                    -  mov eax,ecx
"EDF5.exe"+8CB22: 48 05 81 13 00 00        -  add rax,00001381
"EDF5.exe"+8CB28: 48 8D 04 40              -  lea rax,[rax+rax*2]
// ---------- INJECTING HERE ----------
"EDF5.exe"+8CB2C: 41 F6 04 87 01           -  test byte ptr [r15+rax*4],01
// ---------- DONE INJECTING  ----------
"EDF5.exe"+8CB31: 8D 47 01                 -  lea eax,[rdi+01]
"EDF5.exe"+8CB34: 0F 44 C7                 -  cmove eax,edi
"EDF5.exe"+8CB37: 8B F8                    -  mov edi,eax
"EDF5.exe"+8CB39: FF C1                    -  inc ecx
"EDF5.exe"+8CB3B: 3B CA                    -  cmp ecx,edx
"EDF5.exe"+8CB3D: 75 E1                    -  jne EDF5.exe+8CB20
"EDF5.exe"+8CB3F: 40 84 F6                 -  test sil,sil
"EDF5.exe"+8CB42: 41 0F 95 C6              -  setne r14l
"EDF5.exe"+8CB46: 48 8D 55 EF              -  lea rdx,[rbp-11]
"EDF5.exe"+8CB4A: 48 83 7D 07 08           -  cmp qword ptr [rbp+07],08
}
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>87488</ID>
              <Description>"Max All Weapon Star Level"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : EDF5.exe
  Version: 
  Date   : 2019-07-12
  Author : Idlehands88

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT_WeapUnlock2,EDF5.exe,48 8B 86 10 EA 00 00) // should be unique
alloc(newmem,$1000,"EDF5.exe"+8BC62)

label(code)
label(return)

newmem:

code:
  mov [rsi+0000EA10],#168430090
  mov [rsi+0000EA14],#168430090
  mov rax,[rsi+0000EA10]
  jmp return

INJECT_WeapUnlock2:
  jmp newmem
  nop
  nop
return:
registersymbol(INJECT_WeapUnlock2)

[DISABLE]

INJECT_WeapUnlock2:
  db 48 8B 86 10 EA 00 00

unregistersymbol(INJECT_WeapUnlock2)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "EDF5.exe"+8BC62

"EDF5.exe"+8BC37: 85 ED                       -  test ebp,ebp
"EDF5.exe"+8BC39: 0F 84 B2 00 00 00           -  je EDF5.exe+8BCF1
"EDF5.exe"+8BC3F: 48 89 5C 24 38              -  mov [rsp+38],rbx
"EDF5.exe"+8BC44: 48 89 74 24 40              -  mov [rsp+40],rsi
"EDF5.exe"+8BC49: 48 89 7C 24 10              -  mov [rsp+10],rdi
"EDF5.exe"+8BC4E: 66 90                       -  nop 
"EDF5.exe"+8BC50: 4D 8B 8E B8 01 00 00        -  mov r9,[r14+000001B8]
"EDF5.exe"+8BC57: 4B 8D 0C 52                 -  lea rcx,[r10+r10*2]
"EDF5.exe"+8BC5B: 49 8D 34 8E                 -  lea rsi,[r14+rcx*4]
"EDF5.exe"+8BC5F: 49 63 CA                    -  movsxd  rcx,r10d
// ---------- INJECTING HERE ----------
"EDF5.exe"+8BC62: 48 8B 86 10 EA 00 00        -  mov rax,[rsi+0000EA10]
// ---------- DONE INJECTING  ----------
"EDF5.exe"+8BC69: 48 89 04 24                 -  mov [rsp],rax
"EDF5.exe"+8BC6D: 4D 63 41 08                 -  movsxd  r8,dword ptr [r9+08]
"EDF5.exe"+8BC71: 48 8D 14 49                 -  lea rdx,[rcx+rcx*2]
"EDF5.exe"+8BC75: 4B 8D 0C 01                 -  lea rcx,[r9+r8]
"EDF5.exe"+8BC79: 4C 63 5C 91 08              -  movsxd  r11,dword ptr [rcx+rdx*4+08]
"EDF5.exe"+8BC7E: 4C 8D 04 91                 -  lea r8,[rcx+rdx*4]
"EDF5.exe"+8BC82: 4D 03 D8                    -  add r11,r8
"EDF5.exe"+8BC85: 33 C9                       -  xor ecx,ecx
"EDF5.exe"+8BC87: 41 8B 7B 4C                 -  mov edi,[r11+4C]
"EDF5.exe"+8BC8B: 85 FF                       -  test edi,edi
}
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>87605</ID>
              <Description>"MISSIONS"</Description>
              <Options moHideChildren="1"/>
              <LastState Value="" RealAddress="00000000"/>
              <Color>808000</Color>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>87609</ID>
                  <Description>"All Missions Complete - RANGER (Easy, Normal and Hard)"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : EDF5.exe
  Version: 
  Date   : 2019-07-15
  Author : Idlehands88

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT_MissionsRanger,EDF5.exe,42 0F B6 94 18 6C 56 00 00) // should be unique
alloc(newmem,$1000,"EDF5.exe"+527E0C)

label(code)
label(return)

newmem:

code:
  mov byte ptr [rax+r11+0000566C],#7
  movzx edx,byte ptr [rax+r11+0000566C]
  jmp return

INJECT_MissionsRanger:
  jmp newmem
  nop
  nop
  nop
  nop
return:
registersymbol(INJECT_MissionsRanger)

[DISABLE]

INJECT_MissionsRanger:
  db 42 0F B6 94 18 6C 56 00 00

unregistersymbol(INJECT_MissionsRanger)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "EDF5.exe"+527E0C

"EDF5.exe"+527DDF: 4C 8B 1D 4A 2D D3 00           -  mov r11,[EDF5.exe+125AB30]
"EDF5.exe"+527DE6: 49 8B 83 F8 00 00 00           -  mov rax,[r11+000000F8]
"EDF5.exe"+527DED: 44 8B 50 04                    -  mov r10d,[rax+04]
"EDF5.exe"+527DF1: 45 85 D2                       -  test r10d,r10d
"EDF5.exe"+527DF4: 7E 42                          -  jle EDF5.exe+527E38
"EDF5.exe"+527DF6: 66 66 0F 1F 84 00 00 00 00 00  -  nop [rax+rax+00000000]
"EDF5.exe"+527E00: 8B CA                          -  mov ecx,edx
"EDF5.exe"+527E02: 41 8B C0                       -  mov eax,r8d
"EDF5.exe"+527E05: 48 C1 E0 09                    -  shl rax,09
"EDF5.exe"+527E09: 49 03 C1                       -  add rax,r9
// ---------- INJECTING HERE ----------
"EDF5.exe"+527E0C: 42 0F B6 94 18 6C 56 00 00     -  movzx edx,byte ptr [rax+r11+0000566C]
// ---------- DONE INJECTING  ----------
"EDF5.exe"+527E15: 0F A3 CA                       -  bt edx,ecx
"EDF5.exe"+527E18: 72 13                          -  jb EDF5.exe+527E2D
"EDF5.exe"+527E1A: FF C1                          -  inc ecx
"EDF5.exe"+527E1C: 83 F9 05                       -  cmp ecx,05
"EDF5.exe"+527E1F: 7C F4                          -  jl EDF5.exe+527E15
"EDF5.exe"+527E21: 41 FF C0                       -  inc r8d
"EDF5.exe"+527E24: 33 D2                          -  xor edx,edx
"EDF5.exe"+527E26: 45 3B C2                       -  cmp r8d,r10d
"EDF5.exe"+527E29: 7D 0D                          -  jnl EDF5.exe+527E38
"EDF5.exe"+527E2B: EB D3                          -  jmp EDF5.exe+527E00
}
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>87610</ID>
                  <Description>"All Missions Complete - WING DIVER (Easy, Normal and Hard)"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : EDF5.exe
  Version: 
  Date   : 2019-07-15
  Author : Idlehands88

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT_MissionsRanger,EDF5.exe,42 0F B6 94 18 6C 56 00 00) // should be unique
alloc(newmem,$1000,"EDF5.exe"+527E0C)

label(code)
label(return)

newmem:

code:
  mov byte ptr [rax+r11+0000586C],#7
  movzx edx,byte ptr [rax+r11+0000586C]
  jmp return

INJECT_MissionsRanger:
  jmp newmem
  nop
  nop
  nop
  nop
return:
registersymbol(INJECT_MissionsRanger)

[DISABLE]

INJECT_MissionsRanger:
  db 42 0F B6 94 18 6C 56 00 00

unregistersymbol(INJECT_MissionsRanger)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "EDF5.exe"+527E0C

"EDF5.exe"+527DDF: 4C 8B 1D 4A 2D D3 00           -  mov r11,[EDF5.exe+125AB30]
"EDF5.exe"+527DE6: 49 8B 83 F8 00 00 00           -  mov rax,[r11+000000F8]
"EDF5.exe"+527DED: 44 8B 50 04                    -  mov r10d,[rax+04]
"EDF5.exe"+527DF1: 45 85 D2                       -  test r10d,r10d
"EDF5.exe"+527DF4: 7E 42                          -  jle EDF5.exe+527E38
"EDF5.exe"+527DF6: 66 66 0F 1F 84 00 00 00 00 00  -  nop [rax+rax+00000000]
"EDF5.exe"+527E00: 8B CA                          -  mov ecx,edx
"EDF5.exe"+527E02: 41 8B C0                       -  mov eax,r8d
"EDF5.exe"+527E05: 48 C1 E0 09                    -  shl rax,09
"EDF5.exe"+527E09: 49 03 C1                       -  add rax,r9
// ---------- INJECTING HERE ----------
"EDF5.exe"+527E0C: 42 0F B6 94 18 6C 56 00 00     -  movzx edx,byte ptr [rax+r11+0000566C]
// ---------- DONE INJECTING  ----------
"EDF5.exe"+527E15: 0F A3 CA                       -  bt edx,ecx
"EDF5.exe"+527E18: 72 13                          -  jb EDF5.exe+527E2D
"EDF5.exe"+527E1A: FF C1                          -  inc ecx
"EDF5.exe"+527E1C: 83 F9 05                       -  cmp ecx,05
"EDF5.exe"+527E1F: 7C F4                          -  jl EDF5.exe+527E15
"EDF5.exe"+527E21: 41 FF C0                       -  inc r8d
"EDF5.exe"+527E24: 33 D2                          -  xor edx,edx
"EDF5.exe"+527E26: 45 3B C2                       -  cmp r8d,r10d
"EDF5.exe"+527E29: 7D 0D                          -  jnl EDF5.exe+527E38
"EDF5.exe"+527E2B: EB D3                          -  jmp EDF5.exe+527E00
}
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>87611</ID>
                  <Description>"All Missions Complete - AIR RAIDER (Easy, Normal and Hard)"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : EDF5.exe
  Version: 
  Date   : 2019-07-15
  Author : Idlehands88

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT_MissionsRanger,EDF5.exe,42 0F B6 94 18 6C 56 00 00) // should be unique
alloc(newmem,$1000,"EDF5.exe"+527E0C)

label(code)
label(return)

newmem:

code:
  mov byte ptr [rax+r11+00005A6C],#7
  movzx edx,byte ptr [rax+r11+00005A6C]
  jmp return

INJECT_MissionsRanger:
  jmp newmem
  nop
  nop
  nop
  nop
return:
registersymbol(INJECT_MissionsRanger)

[DISABLE]

INJECT_MissionsRanger:
  db 42 0F B6 94 18 6C 56 00 00

unregistersymbol(INJECT_MissionsRanger)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "EDF5.exe"+527E0C

"EDF5.exe"+527DDF: 4C 8B 1D 4A 2D D3 00           -  mov r11,[EDF5.exe+125AB30]
"EDF5.exe"+527DE6: 49 8B 83 F8 00 00 00           -  mov rax,[r11+000000F8]
"EDF5.exe"+527DED: 44 8B 50 04                    -  mov r10d,[rax+04]
"EDF5.exe"+527DF1: 45 85 D2                       -  test r10d,r10d
"EDF5.exe"+527DF4: 7E 42                          -  jle EDF5.exe+527E38
"EDF5.exe"+527DF6: 66 66 0F 1F 84 00 00 00 00 00  -  nop [rax+rax+00000000]
"EDF5.exe"+527E00: 8B CA                          -  mov ecx,edx
"EDF5.exe"+527E02: 41 8B C0                       -  mov eax,r8d
"EDF5.exe"+527E05: 48 C1 E0 09                    -  shl rax,09
"EDF5.exe"+527E09: 49 03 C1                       -  add rax,r9
// ---------- INJECTING HERE ----------
"EDF5.exe"+527E0C: 42 0F B6 94 18 6C 56 00 00     -  movzx edx,byte ptr [rax+r11+0000566C]
// ---------- DONE INJECTING  ----------
"EDF5.exe"+527E15: 0F A3 CA                       -  bt edx,ecx
"EDF5.exe"+527E18: 72 13                          -  jb EDF5.exe+527E2D
"EDF5.exe"+527E1A: FF C1                          -  inc ecx
"EDF5.exe"+527E1C: 83 F9 05                       -  cmp ecx,05
"EDF5.exe"+527E1F: 7C F4                          -  jl EDF5.exe+527E15
"EDF5.exe"+527E21: 41 FF C0                       -  inc r8d
"EDF5.exe"+527E24: 33 D2                          -  xor edx,edx
"EDF5.exe"+527E26: 45 3B C2                       -  cmp r8d,r10d
"EDF5.exe"+527E29: 7D 0D                          -  jnl EDF5.exe+527E38
"EDF5.exe"+527E2B: EB D3                          -  jmp EDF5.exe+527E00
}
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>87612</ID>
                  <Description>"All Missions Complete - FENCER (Easy, Normal and Hard)"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : EDF5.exe
  Version: 
  Date   : 2019-07-15
  Author : Idlehands88

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT_MissionsRanger,EDF5.exe,42 0F B6 94 18 6C 56 00 00) // should be unique
alloc(newmem,$1000,"EDF5.exe"+527E0C)

label(code)
label(return)

newmem:

code:
  mov byte ptr [rax+r11+00005C6C],#7
  movzx edx,byte ptr [rax+r11+00005C6C]
  jmp return

INJECT_MissionsRanger:
  jmp newmem
  nop
  nop
  nop
  nop
return:
registersymbol(INJECT_MissionsRanger)

[DISABLE]

INJECT_MissionsRanger:
  db 42 0F B6 94 18 6C 56 00 00

unregistersymbol(INJECT_MissionsRanger)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "EDF5.exe"+527E0C

"EDF5.exe"+527DDF: 4C 8B 1D 4A 2D D3 00           -  mov r11,[EDF5.exe+125AB30]
"EDF5.exe"+527DE6: 49 8B 83 F8 00 00 00           -  mov rax,[r11+000000F8]
"EDF5.exe"+527DED: 44 8B 50 04                    -  mov r10d,[rax+04]
"EDF5.exe"+527DF1: 45 85 D2                       -  test r10d,r10d
"EDF5.exe"+527DF4: 7E 42                          -  jle EDF5.exe+527E38
"EDF5.exe"+527DF6: 66 66 0F 1F 84 00 00 00 00 00  -  nop [rax+rax+00000000]
"EDF5.exe"+527E00: 8B CA                          -  mov ecx,edx
"EDF5.exe"+527E02: 41 8B C0                       -  mov eax,r8d
"EDF5.exe"+527E05: 48 C1 E0 09                    -  shl rax,09
"EDF5.exe"+527E09: 49 03 C1                       -  add rax,r9
// ---------- INJECTING HERE ----------
"EDF5.exe"+527E0C: 42 0F B6 94 18 6C 56 00 00     -  movzx edx,byte ptr [rax+r11+0000566C]
// ---------- DONE INJECTING  ----------
"EDF5.exe"+527E15: 0F A3 CA                       -  bt edx,ecx
"EDF5.exe"+527E18: 72 13                          -  jb EDF5.exe+527E2D
"EDF5.exe"+527E1A: FF C1                          -  inc ecx
"EDF5.exe"+527E1C: 83 F9 05                       -  cmp ecx,05
"EDF5.exe"+527E1F: 7C F4                          -  jl EDF5.exe+527E15
"EDF5.exe"+527E21: 41 FF C0                       -  inc r8d
"EDF5.exe"+527E24: 33 D2                          -  xor edx,edx
"EDF5.exe"+527E26: 45 3B C2                       -  cmp r8d,r10d
"EDF5.exe"+527E29: 7D 0D                          -  jnl EDF5.exe+527E38
"EDF5.exe"+527E2B: EB D3                          -  jmp EDF5.exe+527E00
}
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>87613</ID>
                  <Description>"All Missions Complete - ALL CLASSES (Easy, Normal and Hard)"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : EDF5.exe
  Version: 
  Date   : 2019-07-15
  Author : Idlehands88

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT_Missions,EDF5.exe,0F B6 94 11 6C 56 00 00) // should be unique
alloc(newmem,$1000,"EDF5.exe"+52B9E5)

label(code)
label(return)

newmem:

code:
  mov byte ptr [rcx+rdx+0000566C],#7
  movzx edx,byte ptr [rcx+rdx+0000566C]
  jmp return

INJECT_Missions:
  jmp newmem
  nop
  nop
  nop
return:
registersymbol(INJECT_Missions)

[DISABLE]

INJECT_Missions:
  db 0F B6 94 11 6C 56 00 00

unregistersymbol(INJECT_Missions)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "EDF5.exe"+52B9E5

"EDF5.exe"+52B9C0: 48 8B 15 69 F1 D2 00     -  mov rdx,[EDF5.exe+125AB30]
"EDF5.exe"+52B9C7: 48 8B 82 78 01 00 00     -  mov rax,[rdx+00000178]
"EDF5.exe"+52B9CE: 48 85 C0                 -  test rax,rax
"EDF5.exe"+52B9D1: 74 7F                    -  je EDF5.exe+52BA52
"EDF5.exe"+52B9D3: 3B 78 04                 -  cmp edi,[rax+04]
"EDF5.exe"+52B9D6: 73 7A                    -  jae EDF5.exe+52BA52
"EDF5.exe"+52B9D8: B8 01 00 00 00           -  mov eax,00000001
"EDF5.exe"+52B9DD: C1 C0 00                 -  rol eax,00
"EDF5.exe"+52B9E0: 8B CF                    -  mov ecx,edi
"EDF5.exe"+52B9E2: 48 03 CE                 -  add rcx,rsi
// ---------- INJECTING HERE ----------
"EDF5.exe"+52B9E5: 0F B6 94 11 6C 56 00 00  -  movzx edx,byte ptr [rcx+rdx+0000566C]
// ---------- DONE INJECTING  ----------
"EDF5.exe"+52B9ED: 85 D0                    -  test eax,edx
"EDF5.exe"+52B9EF: 41 8B DE                 -  mov ebx,r14d
"EDF5.exe"+52B9F2: 0F 45 D8                 -  cmovne ebx,eax
"EDF5.exe"+52B9F5: D1 C0                    -  rol eax,1
"EDF5.exe"+52B9F7: 85 D0                    -  test eax,edx
"EDF5.exe"+52B9F9: 74 02                    -  je EDF5.exe+52B9FD
"EDF5.exe"+52B9FB: 0B D8                    -  or ebx,eax
"EDF5.exe"+52B9FD: D1 C0                    -  rol eax,1
"EDF5.exe"+52B9FF: 85 D0                    -  test eax,edx
"EDF5.exe"+52BA01: 74 02                    -  je EDF5.exe+52BA05
}
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>87614</ID>
                  <Description>"All Missions Complete - RANGER (All Difficulties)"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : EDF5.exe
  Version: 
  Date   : 2019-07-15
  Author : Idlehands88

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT_MissionsRanger,EDF5.exe,42 0F B6 94 18 6C 56 00 00) // should be unique
alloc(newmem,$1000,"EDF5.exe"+527E0C)

label(code)
label(return)

newmem:

code:
  mov byte ptr [rax+r11+0000566C],#31
  movzx edx,byte ptr [rax+r11+0000566C]
  jmp return

INJECT_MissionsRanger:
  jmp newmem
  nop
  nop
  nop
  nop
return:
registersymbol(INJECT_MissionsRanger)

[DISABLE]

INJECT_MissionsRanger:
  db 42 0F B6 94 18 6C 56 00 00

unregistersymbol(INJECT_MissionsRanger)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "EDF5.exe"+527E0C

"EDF5.exe"+527DDF: 4C 8B 1D 4A 2D D3 00           -  mov r11,[EDF5.exe+125AB30]
"EDF5.exe"+527DE6: 49 8B 83 F8 00 00 00           -  mov rax,[r11+000000F8]
"EDF5.exe"+527DED: 44 8B 50 04                    -  mov r10d,[rax+04]
"EDF5.exe"+527DF1: 45 85 D2                       -  test r10d,r10d
"EDF5.exe"+527DF4: 7E 42                          -  jle EDF5.exe+527E38
"EDF5.exe"+527DF6: 66 66 0F 1F 84 00 00 00 00 00  -  nop [rax+rax+00000000]
"EDF5.exe"+527E00: 8B CA                          -  mov ecx,edx
"EDF5.exe"+527E02: 41 8B C0                       -  mov eax,r8d
"EDF5.exe"+527E05: 48 C1 E0 09                    -  shl rax,09
"EDF5.exe"+527E09: 49 03 C1                       -  add rax,r9
// ---------- INJECTING HERE ----------
"EDF5.exe"+527E0C: 42 0F B6 94 18 6C 56 00 00     -  movzx edx,byte ptr [rax+r11+0000566C]
// ---------- DONE INJECTING  ----------
"EDF5.exe"+527E15: 0F A3 CA                       -  bt edx,ecx
"EDF5.exe"+527E18: 72 13                          -  jb EDF5.exe+527E2D
"EDF5.exe"+527E1A: FF C1                          -  inc ecx
"EDF5.exe"+527E1C: 83 F9 05                       -  cmp ecx,05
"EDF5.exe"+527E1F: 7C F4                          -  jl EDF5.exe+527E15
"EDF5.exe"+527E21: 41 FF C0                       -  inc r8d
"EDF5.exe"+527E24: 33 D2                          -  xor edx,edx
"EDF5.exe"+527E26: 45 3B C2                       -  cmp r8d,r10d
"EDF5.exe"+527E29: 7D 0D                          -  jnl EDF5.exe+527E38
"EDF5.exe"+527E2B: EB D3                          -  jmp EDF5.exe+527E00
}
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>87615</ID>
                  <Description>"All Missions Complete - WING DIVER (All Difficulties)"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : EDF5.exe
  Version: 
  Date   : 2019-07-15
  Author : Idlehands88

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT_MissionsRanger,EDF5.exe,42 0F B6 94 18 6C 56 00 00) // should be unique
alloc(newmem,$1000,"EDF5.exe"+527E0C)

label(code)
label(return)

newmem:

code:
  mov byte ptr [rax+r11+0000586C],#31
  movzx edx,byte ptr [rax+r11+0000586C]
  jmp return

INJECT_MissionsRanger:
  jmp newmem
  nop
  nop
  nop
  nop
return:
registersymbol(INJECT_MissionsRanger)

[DISABLE]

INJECT_MissionsRanger:
  db 42 0F B6 94 18 6C 56 00 00

unregistersymbol(INJECT_MissionsRanger)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "EDF5.exe"+527E0C

"EDF5.exe"+527DDF: 4C 8B 1D 4A 2D D3 00           -  mov r11,[EDF5.exe+125AB30]
"EDF5.exe"+527DE6: 49 8B 83 F8 00 00 00           -  mov rax,[r11+000000F8]
"EDF5.exe"+527DED: 44 8B 50 04                    -  mov r10d,[rax+04]
"EDF5.exe"+527DF1: 45 85 D2                       -  test r10d,r10d
"EDF5.exe"+527DF4: 7E 42                          -  jle EDF5.exe+527E38
"EDF5.exe"+527DF6: 66 66 0F 1F 84 00 00 00 00 00  -  nop [rax+rax+00000000]
"EDF5.exe"+527E00: 8B CA                          -  mov ecx,edx
"EDF5.exe"+527E02: 41 8B C0                       -  mov eax,r8d
"EDF5.exe"+527E05: 48 C1 E0 09                    -  shl rax,09
"EDF5.exe"+527E09: 49 03 C1                       -  add rax,r9
// ---------- INJECTING HERE ----------
"EDF5.exe"+527E0C: 42 0F B6 94 18 6C 56 00 00     -  movzx edx,byte ptr [rax+r11+0000566C]
// ---------- DONE INJECTING  ----------
"EDF5.exe"+527E15: 0F A3 CA                       -  bt edx,ecx
"EDF5.exe"+527E18: 72 13                          -  jb EDF5.exe+527E2D
"EDF5.exe"+527E1A: FF C1                          -  inc ecx
"EDF5.exe"+527E1C: 83 F9 05                       -  cmp ecx,05
"EDF5.exe"+527E1F: 7C F4                          -  jl EDF5.exe+527E15
"EDF5.exe"+527E21: 41 FF C0                       -  inc r8d
"EDF5.exe"+527E24: 33 D2                          -  xor edx,edx
"EDF5.exe"+527E26: 45 3B C2                       -  cmp r8d,r10d
"EDF5.exe"+527E29: 7D 0D                          -  jnl EDF5.exe+527E38
"EDF5.exe"+527E2B: EB D3                          -  jmp EDF5.exe+527E00
}
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>87616</ID>
                  <Description>"All Missions Complete - AIR RAIDER (All Difficulties)"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : EDF5.exe
  Version: 
  Date   : 2019-07-15
  Author : Idlehands88

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT_MissionsRanger,EDF5.exe,42 0F B6 94 18 6C 56 00 00) // should be unique
alloc(newmem,$1000,"EDF5.exe"+527E0C)

label(code)
label(return)

newmem:

code:
  mov byte ptr [rax+r11+00005A6C],#31
  movzx edx,byte ptr [rax+r11+00005A6C]
  jmp return

INJECT_MissionsRanger:
  jmp newmem
  nop
  nop
  nop
  nop
return:
registersymbol(INJECT_MissionsRanger)

[DISABLE]

INJECT_MissionsRanger:
  db 42 0F B6 94 18 6C 56 00 00

unregistersymbol(INJECT_MissionsRanger)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "EDF5.exe"+527E0C

"EDF5.exe"+527DDF: 4C 8B 1D 4A 2D D3 00           -  mov r11,[EDF5.exe+125AB30]
"EDF5.exe"+527DE6: 49 8B 83 F8 00 00 00           -  mov rax,[r11+000000F8]
"EDF5.exe"+527DED: 44 8B 50 04                    -  mov r10d,[rax+04]
"EDF5.exe"+527DF1: 45 85 D2                       -  test r10d,r10d
"EDF5.exe"+527DF4: 7E 42                          -  jle EDF5.exe+527E38
"EDF5.exe"+527DF6: 66 66 0F 1F 84 00 00 00 00 00  -  nop [rax+rax+00000000]
"EDF5.exe"+527E00: 8B CA                          -  mov ecx,edx
"EDF5.exe"+527E02: 41 8B C0                       -  mov eax,r8d
"EDF5.exe"+527E05: 48 C1 E0 09                    -  shl rax,09
"EDF5.exe"+527E09: 49 03 C1                       -  add rax,r9
// ---------- INJECTING HERE ----------
"EDF5.exe"+527E0C: 42 0F B6 94 18 6C 56 00 00     -  movzx edx,byte ptr [rax+r11+0000566C]
// ---------- DONE INJECTING  ----------
"EDF5.exe"+527E15: 0F A3 CA                       -  bt edx,ecx
"EDF5.exe"+527E18: 72 13                          -  jb EDF5.exe+527E2D
"EDF5.exe"+527E1A: FF C1                          -  inc ecx
"EDF5.exe"+527E1C: 83 F9 05                       -  cmp ecx,05
"EDF5.exe"+527E1F: 7C F4                          -  jl EDF5.exe+527E15
"EDF5.exe"+527E21: 41 FF C0                       -  inc r8d
"EDF5.exe"+527E24: 33 D2                          -  xor edx,edx
"EDF5.exe"+527E26: 45 3B C2                       -  cmp r8d,r10d
"EDF5.exe"+527E29: 7D 0D                          -  jnl EDF5.exe+527E38
"EDF5.exe"+527E2B: EB D3                          -  jmp EDF5.exe+527E00
}
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>87617</ID>
                  <Description>"All Missions Complete - FENCER (All Difficulties)"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : EDF5.exe
  Version: 
  Date   : 2019-07-15
  Author : Idlehands88

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT_MissionsRanger,EDF5.exe,42 0F B6 94 18 6C 56 00 00) // should be unique
alloc(newmem,$1000,"EDF5.exe"+527E0C)

label(code)
label(return)

newmem:

code:
  mov byte ptr [rax+r11+00005C6C],#31
  movzx edx,byte ptr [rax+r11+00005C6C]
  jmp return

INJECT_MissionsRanger:
  jmp newmem
  nop
  nop
  nop
  nop
return:
registersymbol(INJECT_MissionsRanger)

[DISABLE]

INJECT_MissionsRanger:
  db 42 0F B6 94 18 6C 56 00 00

unregistersymbol(INJECT_MissionsRanger)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "EDF5.exe"+527E0C

"EDF5.exe"+527DDF: 4C 8B 1D 4A 2D D3 00           -  mov r11,[EDF5.exe+125AB30]
"EDF5.exe"+527DE6: 49 8B 83 F8 00 00 00           -  mov rax,[r11+000000F8]
"EDF5.exe"+527DED: 44 8B 50 04                    -  mov r10d,[rax+04]
"EDF5.exe"+527DF1: 45 85 D2                       -  test r10d,r10d
"EDF5.exe"+527DF4: 7E 42                          -  jle EDF5.exe+527E38
"EDF5.exe"+527DF6: 66 66 0F 1F 84 00 00 00 00 00  -  nop [rax+rax+00000000]
"EDF5.exe"+527E00: 8B CA                          -  mov ecx,edx
"EDF5.exe"+527E02: 41 8B C0                       -  mov eax,r8d
"EDF5.exe"+527E05: 48 C1 E0 09                    -  shl rax,09
"EDF5.exe"+527E09: 49 03 C1                       -  add rax,r9
// ---------- INJECTING HERE ----------
"EDF5.exe"+527E0C: 42 0F B6 94 18 6C 56 00 00     -  movzx edx,byte ptr [rax+r11+0000566C]
// ---------- DONE INJECTING  ----------
"EDF5.exe"+527E15: 0F A3 CA                       -  bt edx,ecx
"EDF5.exe"+527E18: 72 13                          -  jb EDF5.exe+527E2D
"EDF5.exe"+527E1A: FF C1                          -  inc ecx
"EDF5.exe"+527E1C: 83 F9 05                       -  cmp ecx,05
"EDF5.exe"+527E1F: 7C F4                          -  jl EDF5.exe+527E15
"EDF5.exe"+527E21: 41 FF C0                       -  inc r8d
"EDF5.exe"+527E24: 33 D2                          -  xor edx,edx
"EDF5.exe"+527E26: 45 3B C2                       -  cmp r8d,r10d
"EDF5.exe"+527E29: 7D 0D                          -  jnl EDF5.exe+527E38
"EDF5.exe"+527E2B: EB D3                          -  jmp EDF5.exe+527E00
}
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>87618</ID>
                  <Description>"All Missions Complete - ALL CLASSES (All Difficulties)"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : EDF5.exe
  Version: 
  Date   : 2019-07-15
  Author : Idlehands88

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT_Missions,EDF5.exe,0F B6 94 11 6C 56 00 00) // should be unique
alloc(newmem,$1000,"EDF5.exe"+52B9E5)

label(code)
label(return)

newmem:

code:
  mov byte ptr [rcx+rdx+0000566C],#31
  movzx edx,byte ptr [rcx+rdx+0000566C]
  jmp return

INJECT_Missions:
  jmp newmem
  nop
  nop
  nop
return:
registersymbol(INJECT_Missions)

[DISABLE]

INJECT_Missions:
  db 0F B6 94 11 6C 56 00 00

unregistersymbol(INJECT_Missions)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "EDF5.exe"+52B9E5

"EDF5.exe"+52B9C0: 48 8B 15 69 F1 D2 00     -  mov rdx,[EDF5.exe+125AB30]
"EDF5.exe"+52B9C7: 48 8B 82 78 01 00 00     -  mov rax,[rdx+00000178]
"EDF5.exe"+52B9CE: 48 85 C0                 -  test rax,rax
"EDF5.exe"+52B9D1: 74 7F                    -  je EDF5.exe+52BA52
"EDF5.exe"+52B9D3: 3B 78 04                 -  cmp edi,[rax+04]
"EDF5.exe"+52B9D6: 73 7A                    -  jae EDF5.exe+52BA52
"EDF5.exe"+52B9D8: B8 01 00 00 00           -  mov eax,00000001
"EDF5.exe"+52B9DD: C1 C0 00                 -  rol eax,00
"EDF5.exe"+52B9E0: 8B CF                    -  mov ecx,edi
"EDF5.exe"+52B9E2: 48 03 CE                 -  add rcx,rsi
// ---------- INJECTING HERE ----------
"EDF5.exe"+52B9E5: 0F B6 94 11 6C 56 00 00  -  movzx edx,byte ptr [rcx+rdx+0000566C]
// ---------- DONE INJECTING  ----------
"EDF5.exe"+52B9ED: 85 D0                    -  test eax,edx
"EDF5.exe"+52B9EF: 41 8B DE                 -  mov ebx,r14d
"EDF5.exe"+52B9F2: 0F 45 D8                 -  cmovne ebx,eax
"EDF5.exe"+52B9F5: D1 C0                    -  rol eax,1
"EDF5.exe"+52B9F7: 85 D0                    -  test eax,edx
"EDF5.exe"+52B9F9: 74 02                    -  je EDF5.exe+52B9FD
"EDF5.exe"+52B9FB: 0B D8                    -  or ebx,eax
"EDF5.exe"+52B9FD: D1 C0                    -  rol eax,1
"EDF5.exe"+52B9FF: 85 D0                    -  test eax,edx
"EDF5.exe"+52BA01: 74 02                    -  je EDF5.exe+52BA05
}
</AssemblerScript>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>storedvalue</Name>
      <Address>17180C10000</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
</CheatTable>
